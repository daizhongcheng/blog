<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/blog/undefined/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<h2 id="More-info-Deployment"><a href="#More-info-Deployment" class="headerlink" title="More info: Deployment"></a>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></h2><hr>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>C pointer</title>
    <url>/blog/C_program/C-pointer/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a = 10,b =10;</span><br><span class="line">int *point_1,*point_2;</span><br><span class="line"></span><br><span class="line">point_1 = &amp;a; //let the adress of the a equal to point_1</span><br><span class="line">point_2 = &amp;b; //let the adress of the b equal to point_1</span><br><span class="line">printf(&quot;a=%d,b=%d\n&quot;,a,b); //print the value of the a and b</span><br><span class="line">printf(&quot;%p,%p\n&quot;,print_1,point_2); //print the adress of the a and b</span><br><span class="line">printf(&quot;*point_1=%d,*point_2=%d\n&quot;,*point_1,*point_2);//print the value of the a and b</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>subfunction</title>
    <url>/blog/C_program/subfunction/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">void printstar();</span><br><span class="line">void printStr();</span><br><span class="line"></span><br><span class="line">printstar();</span><br><span class="line">printStr();</span><br><span class="line">printstar();</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">void printstar()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;*********************\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">void printStr()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;how do you do!\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>int main() is the main program.<br>void printstar() and void printStr are the subfunction.</p>
<h4 id="The-step-of-the-main-program"><a href="#The-step-of-the-main-program" class="headerlink" title="The step of the main program"></a>The step of the main program</h4><p>1.call the void printstar()<br>2.call the void printStr()<br>3.run the printstar()<br>4.run the printStr()</p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>charArray</title>
    <url>/blog/C_program/charArray/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	char c[][9] = </span><br><span class="line">	&#123; </span><br><span class="line">		&#123;&apos;*&apos;,&apos;*&apos;,&apos;*&apos;,&apos;*&apos;,&apos;*&apos;&#125;,</span><br><span class="line">		&#123;&apos;*&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;*&apos;&#125;,</span><br><span class="line">		&#123;&apos;*&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;*&apos;&#125;,</span><br><span class="line">		&#123;&apos;*&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;,&apos;*&apos;&#125;,</span><br><span class="line">		&#123;&apos;*&apos;,&apos;*&apos;,&apos;*&apos;,&apos;*&apos;,&apos;*&apos;&#125;,</span><br><span class="line">	&#125;;</span><br><span class="line">	int i,j;</span><br><span class="line">	for(i=0;i&lt;5;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		for(j=0;j&lt;9;j++)</span><br><span class="line">			printf(&quot;%c&quot;,c[i][j]);</span><br><span class="line">		printf(&quot;\n&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="char-string"><a href="#char-string" class="headerlink" title="char string"></a>char string</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char[] =&#123;&quot;I love you zhongcheng&quot;&#125;;</span><br><span class="line">or </span><br><span class="line">char[] = &quot;I love you zhongcheng&quot; ;</span><br><span class="line">note:</span><br><span class="line">char[] = &quot;I love you zhongcheng&quot; ;</span><br><span class="line">is same as </span><br><span class="line">char[]=&#123;&apos;I&apos;,&apos; &apos;,&apos;l&apos;,&apos;o&apos;,&apos;v&apos;,&apos;e&apos;,&apos; &apos;,&apos;z&apos;,&apos;h&apos;,&apos;o&apos;,&apos;n&apos;,&apos;g&apos;,&apos; &apos;,&apos;c&apos;,&apos;h&apos;,&apos;e&apos;,&apos;n&apos;,&apos;g&apos;,&apos;\0&apos;&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="char-string-output-print"><a href="#char-string-output-print" class="headerlink" title="char string output(print)"></a>char string output(print)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char[]=&quot;I love zhongcheng&quot;;</span><br><span class="line">printf(&quot;%s&quot;,c);</span><br></pre></td></tr></table></figure>
<p>note:%s means output the string</p>
<h4 id="get-and-put-function"><a href="#get-and-put-function" class="headerlink" title="get and put function"></a>get and put function</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	char str[] = &quot;study is important in the life&quot;</span><br><span class="line">	puts(str);</span><br><span class="line">	printf(&quot;Enter a new string:&quot;);</span><br><span class="line">	gets(str);</span><br><span class="line">	puts(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>gets:get the string from the terminal<br>puts:print the string</p>
<h4 id="strcat-combine-the-string"><a href="#strcat-combine-the-string" class="headerlink" title="strcat:combine the string"></a>strcat:combine the string</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str1[40] = &quot;I dont want to do it,&quot;;</span><br><span class="line">str2[] = &quot;but you can do it&quot;;</span><br><span class="line">str3[] = strcat(str1,str2);</span><br></pre></td></tr></table></figure>
<p>result:str3[] = “I dont want to do it,but you can do it”;</p>
<h4 id="strlen-get-the-length-of-string"><a href="#strlen-get-the-length-of-string" class="headerlink" title="strlen:get the length of string"></a>strlen:get the length of string</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char str[]=&quot;study&quot;;</span><br><span class="line">printf(&quot;%d&quot;,strlen(str));</span><br></pre></td></tr></table></figure>
<p>note:strlen() return the length of string but don’t include the ‘\0’</p>
<h4 id="strcpy-copy-the-string"><a href="#strcpy-copy-the-string" class="headerlink" title="strcpy:copy the string"></a>strcpy:copy the string</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char str1[],str2[] = &quot;I must study&quot;;</span><br><span class="line">str2 = strcpy(str1,str2);</span><br></pre></td></tr></table></figure>
<p>result:str1=”I must study”;</p>
<h4 id="strcmp-comparision"><a href="#strcmp-comparision" class="headerlink" title="strcmp:comparision"></a>strcmp:comparision</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strcmp(str1,str2);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>array</title>
    <url>/blog/C_program/array/</url>
    <content><![CDATA[<h4 id="one-dimension"><a href="#one-dimension" class="headerlink" title="one dimension"></a>one dimension</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int i,a[10]; //10 value</span><br><span class="line">	for(i=0;i&lt;10;i++)</span><br><span class="line">		a[i] = i + 1;</span><br><span class="line">	for(i=9;i&gt;=0;i--)</span><br><span class="line">		printf(&quot;%d\t&quot;,a[i]);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="sort-the-number"><a href="#sort-the-number" class="headerlink" title="sort the number"></a>sort the number</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"> 	int i,j,a[10];</span><br><span class="line">	printf(&quot;please enter 10 number:\n&quot;);</span><br><span class="line">	for(i=0;i&lt;10;i++)</span><br><span class="line">		scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">	for(j=0;j&lt;9;j++)</span><br><span class="line">		for(i=0;i&lt;9-j;i++)</span><br><span class="line">			if(a[i]&gt;a[i+1])</span><br><span class="line">			&#123;</span><br><span class="line">				t = a[i];</span><br><span class="line">				a[i] = a[i+1];</span><br><span class="line">				a[i+1] = t;</span><br><span class="line">			&#125;</span><br><span class="line">	printf(&quot;the sorted number:\n&quot;);</span><br><span class="line">	for(i=0;i&lt;10;i++)</span><br><span class="line">		printf(&quot;%d\t&quot;,a[i]);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="two-dimension"><a href="#two-dimension" class="headerlink" title="two dimension"></a>two dimension</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int a[2][4]</span><br></pre></td></tr></table></figure>
<p>for example:<br>$$ a[2][4]=\begin{pmatrix}1&amp;2&amp;3&amp;4 \\ 4&amp;5&amp;6&amp;7 \end{pmatrix}$$</p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>Repetely loop</title>
    <url>/blog/C_program/Repetely-loop/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int	i = 1;</span><br><span class="line">float aver,score1,score2,score3,score4;</span><br><span class="line">	while(i&lt;=3)</span><br><span class="line">	&#123;</span><br><span class="line">		scanf(&quot;%f%f%f%f&quot;,&amp;score1,&amp;score2,&amp;score3,&amp;score4);</span><br><span class="line">		aver = (score1+score2+score3+score4)/4;</span><br><span class="line">		printf(&quot;aver=%7.2f&quot;,aver);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int i,sum =0;</span><br><span class="line">	printf(&quot;PLEASE ENTER I:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;i);</span><br><span class="line">	do</span><br><span class="line">	&#123;</span><br><span class="line">		sum = sum + i;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	while(i&lt;=100);</span><br><span class="line">	printf(&quot;sum=%d\n&quot;,sum);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int i,sum =0;</span><br><span class="line">	for(i=1;i&lt;=100;i++)</span><br><span class="line">	sum = sum + i;</span><br><span class="line">	printf(&quot;sum =%d\n&quot;,sum);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>switch</title>
    <url>/blog/C_program/switch/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int a;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">	switch(a)</span><br><span class="line">&#123;</span><br><span class="line">	case 1:printf(&quot;monday\n&quot;); break;</span><br><span class="line">	case 2:printf(&quot;tuesday\n&quot;);break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>printf scanf</title>
    <url>/blog/C_program/printf-scanf/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int a,b,c;</span><br><span class="line">	printf(&quot;please enter a value:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">	printf(&quot;\n&quot;);</span><br><span class="line">	printf(&quot;please enter b value&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;b);</span><br><span class="line">	c=a+b;</span><br><span class="line">	printf(&quot;\n%d\n&quot;,c);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>printf: print output<br>scanf: input<br>int 4 word<br>short 2 word<br>long 8 word</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char a,b;</span><br><span class="line">a=&apos;c&apos;;</span><br><span class="line">b=121;</span><br><span class="line">printf(&quot;%c,%c\n&quot;,a,b);</span><br><span class="line">printf(&quot;%d,%d\n&quot;,a,b);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>LATEX problem summary</title>
    <url>/blog/latex/LATEX-problem-summary/</url>
    <content><![CDATA[<h4 id="problem-1"><a href="#problem-1" class="headerlink" title="problem 1"></a>problem 1</h4><p>when type \mathbb{D}, yields undefied sequence error<br>solution:load the package amsfonts</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\usepackage&#123;amsfonts&#125;</span><br></pre></td></tr></table></figure>
<h4 id="text-width"><a href="#text-width" class="headerlink" title="text width"></a>text width</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\quad % one space</span><br><span class="line">\qquad % two space</span><br><span class="line">\hspace&#123;3cm&#125; % 3cm </span><br><span class="line">\textwidth&#123;&#125;</span><br><span class="line">\em&#123;&#125;</span><br><span class="line">\vspace&#123;&#125; %vertical mode and internal vertical mode</span><br><span class="line">\vskip&#123;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="left-and-right-Brackets-and-curly-braces"><a href="#left-and-right-Brackets-and-curly-braces" class="headerlink" title="left and right Brackets and curly braces"></a>left and right Brackets and curly braces</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">\left\&#123; </span><br><span class="line">\frac&#123;ax+by&#125;&#123;a^2+b^2&#125;</span><br><span class="line">\right\&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">\left( </span><br><span class="line">\frac&#123;ax+by&#125;&#123;a^2+b^2&#125;</span><br><span class="line">\right)</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>
<p>$$\left{ \frac{ax+by}{a^2+b^2}\right} $$<br>$$\left(\frac{ax+by}{a^2+b^2}\right) $$</p>
]]></content>
      <categories>
        <category>LATEX</category>
      </categories>
  </entry>
  <entry>
    <title>robust</title>
    <url>/blog/learning/robust/</url>
    <content><![CDATA[<iframe src="//www.slideshare.net/slideshow/embed_code/key/aoCpF3sR7qWrjA" width="668" height="714" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> 

]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title>the first c program - hello world</title>
    <url>/blog/learning/the-first-c-program-hello-world/</url>
    <content><![CDATA[<h4 id="open-terminal-new-file"><a href="#open-terminal-new-file" class="headerlink" title="open terminal,new file"></a>open terminal,new file</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch helloWorld.c</span><br></pre></td></tr></table></figure>

<h4 id="edit-it-use-vim"><a href="#edit-it-use-vim" class="headerlink" title="edit it use vim"></a>edit it use vim</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim helloWorld.c</span><br></pre></td></tr></table></figure>
<h4 id="input-the-code"><a href="#input-the-code" class="headerlink" title="input the code"></a>input the code</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;hello world&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc -o helloWorld helloWorld.c</span><br></pre></td></tr></table></figure>
<h4 id="run-it"><a href="#run-it" class="headerlink" title="run it"></a>run it</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./helloWorld.c</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title>robust control note 1</title>
    <url>/blog/learning/robust-control-note-1/</url>
    <content><![CDATA[<h5 id="The-main-2-topic"><a href="#The-main-2-topic" class="headerlink" title="The main 2 topic"></a>The main 2 topic</h5><p>1.parameterisation of stabilising controllers<br>2.observers and observers-based controllers<br>Objective:<br>y := the measurement<br>w := reference signal<br>the goal is to make the $$ e = y - w : to  min $$</p>
<h5 id="The-step"><a href="#The-step" class="headerlink" title="The step"></a>The step</h5><p>plant is given (G(s),(A,B,C,D))<br>Where (A,B,C,D) is statespace representation.</p>
<h6 id="1-select-of-type-controller"><a href="#1-select-of-type-controller" class="headerlink" title="1.select of type controller"></a>1.select of type controller</h6><p>PI controller<br>Adaptive controller<br>Furry controller (not in the course<br>State feedback controller</p>
<h6 id="2-design-of-controller"><a href="#2-design-of-controller" class="headerlink" title="2.design of controller"></a>2.design of controller</h6><p>1.pole placement (we can define eigendynamics of the system.<br>2.Minimum energy control<br>3.LQ(linear quadratisch) Controller<br>4.quadratic reglflaeche</p>
]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title>what is the self_driving</title>
    <url>/blog/learning/what-is-the-self-driving/</url>
    <content><![CDATA[<h4 id="Human"><a href="#Human" class="headerlink" title="Human"></a>Human</h4><p>1.high traffic accident rate<br>2.learn to drive from scratch<br>3.parking trouble</p>
<h4 id="self-driving-car"><a href="#self-driving-car" class="headerlink" title="self driving car"></a>self driving car</h4><p>1.more reliable driving<br>2.learnalbe driving system<br>3.no parking trouble</p>
<h4 id="6-level-of-the-self-driving-system"><a href="#6-level-of-the-self-driving-system" class="headerlink" title="6 level of the self driving system"></a>6 level of the self driving system</h4><p>1.driver assistance(driver fully engaged<br>2.partial automation<br>(1,automatic cruise control<br>(2,automatic lane keeping<br>3.conditional automation<br>(1,human take over<br>(2,whenever necessary<br>4.no human interference<br>(1,without steering wheel,throttle or brake<br>(2,restricted in geofence<br>5.full automation<br>1995 Mercedes s500 finished the eureka prometheus project.<br>2009 google started self_driving project</p>
]]></content>
      <categories>
        <category>self driving</category>
      </categories>
  </entry>
  <entry>
    <title>environment configeration</title>
    <url>/blog/learning/environment-configeration/</url>
    <content><![CDATA[<h4 id="pip-numpy-scikit-nerualnetwork-install"><a href="#pip-numpy-scikit-nerualnetwork-install" class="headerlink" title="pip,numpy,scikit-nerualnetwork install"></a>pip,numpy,scikit-nerualnetwork install</h4><h5 id="os-macos"><a href="#os-macos" class="headerlink" title="os:macos"></a>os:macos</h5><p>python2.76 have already installed the pip.<br>scikit-nerualnetwork is deep learning tools<br>install: pip install -U scikit-learn<br>scikit-learn include the SVM tools</p>
<h4 id="install-matplotlib"><a href="#install-matplotlib" class="headerlink" title="install matplotlib"></a>install matplotlib</h4><p>pip3 install -U matplotlib</p>
]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
  </entry>
  <entry>
    <title>The two types of problems</title>
    <url>/blog/learning/The-two-types-of-problems/</url>
    <content><![CDATA[<p>1.Analysis problems:Given a controller,determine if the controlled signals satisfy the desired properties for all admissible noises,disturbances,and model uncertainties.<br>2.Synthesis problems:Design a controller so that the controlled signals satisfy the desire properties for all admissble noises,disturbances,and model uncertainties.</p>
]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title>K methode</title>
    <url>/blog/learning/K-methode/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>k 近邻算法采用测量不同特征值之间的距离方法进行分类。<br>优点：精度高，对异常值不敏感，无数据输入假定。<br>缺点：计算复杂度高，空间复杂度高。<br>适用数据范围：数值型和标称型。</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>存在一个样本数据集合，每个数据有自己的标签。当我们输入新的数据后，会计算新数据的每个特征与样本集中数据对应的特征进行比较，然后算法提取样本集中特征最相似数据的分类标签。一般来说我们只选择样本数据集中前k个最相似的数据。<br>例：电影分类，分开爱情片和动作片。<br>输入一个未知电影，计算未知电影与爱情片和动作片的距离。</p>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>1.收集数据，使用任何方法。<br>2.准备数据，距离计算所需要的数值，最好是结构化的数据格式。<br>4.训练算法，此步骤不适合k-近邻算法。<br>5.测试算法，计算错误率。<br>6.使用算法，首先需要输入样本数据和结构化的输出结果，然后运行k-近邻算法判定输入数据分别属于哪个分类，最后应用对计算出的分类执行后续的处理。</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>首先，创建名为knn.py的python模块。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">def createDataSet():</span><br><span class="line">    group = array([[1.0,1.1],[1.0,1.0],[0,0]])</span><br><span class="line">    labels = [&apos;A&apos;,&apos;A&apos;,&apos;B&apos;,&apos;B&apos;]</span><br><span class="line">    return group,labels</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>然后我们调用我的新建的knn模块。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import knn</span><br><span class="line">group,labels = knn.createDataSet()</span><br></pre></td></tr></table></figure>

<h3 id="实施knn算法"><a href="#实施knn算法" class="headerlink" title="实施knn算法"></a>实施knn算法</h3><p>1.计算已知类别属性的数据集中的每个点与当前点的距离<br>2.按照距离递增次序排序<br>3.先取与当前点距离最小的k个点<br>4.确定前k个点所在类别出现频率<br>5.返回前k个点出现频率最高的类别作为当前点的预测分类</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>coprime factorization</title>
    <url>/blog/learning/right-coprime-factorization/</url>
    <content><![CDATA[<h4 id="right-coprime-factorization-a-state-feedback-interpretation"><a href="#right-coprime-factorization-a-state-feedback-interpretation" class="headerlink" title="right coprime factorization,a state feedback interpretation"></a>right coprime factorization,a state feedback interpretation</h4><p>$ y = Gu \rightarrow<br>\begin{cases}<br>\dot{x}=Ax+Bu \\<br>y = Cx+Du<br>\end{cases}<br>\rightarrow{u:=Fx+v}<br>\begin{cases}<br>\dot{x}=(A+BF)x+Bv \\<br>u=Fx+v \\<br>y=Cx+D(v+Fx)=(C+DF)x+Dv<br>\end{cases}<br>$<br>//<br>我们把u定义的公式代入，得到F和v的式子。F,v的式子可以得到传递矩阵。<br>M,N<br>$ u = Mv, y = Nv $</p>
<h4 id="The-left-co-prime-factorization"><a href="#The-left-co-prime-factorization" class="headerlink" title="The left co-prime factorization"></a>The left co-prime factorization</h4><p>an observer-based residual generation interpretation</p>
]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title>Creating Regex Objects</title>
    <url>/blog/learning/Creating-Regex-Objects/</url>
    <content><![CDATA[<h3 id="Regex-Objects"><a href="#Regex-Objects" class="headerlink" title="Regex Objects"></a>Regex Objects</h3><p>All the regex function in python are in the ‘re’ module.Enter the following into the interactive shell to import this module:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">phoneNumRegex = re.compile(r&apos;(\(\d\d\d\))(\d\d\d-\d\d\d\d)&apos;)</span><br><span class="line">mo = phoneNumRegex.search(&apos;My phone number is (415) 555-4242.&apos;)</span><br><span class="line">mo.group(1)</span><br><span class="line">mo.group(2)</span><br><span class="line">&apos;555-4242&apos;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="Matching-Multiple-Groups-with-the-Pipe"><a href="#Matching-Multiple-Groups-with-the-Pipe" class="headerlink" title="Matching Multiple Groups with the Pipe"></a>Matching Multiple Groups with the Pipe</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">batRegex = re.compile(r&apos;Bat(man|mobile|copter|bat)&apos;)</span><br><span class="line">mo = batRegex.search(&apos;Batmobile lost a wheel&apos;)</span><br><span class="line">mo.group()</span><br><span class="line">&apos;Batmobile&apos;</span><br><span class="line">mo.group(1)</span><br><span class="line">&apos;mobile&apos;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>“文件处理”</title>
    <url>/blog/learning/%E2%80%9C%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E2%80%9D/</url>
    <content><![CDATA[<h3 id="operate-file"><a href="#operate-file" class="headerlink" title="operate file"></a>operate file</h3><ol>
<li>open file</li>
<li>read file</li>
<li>with statement<h3 id="open"><a href="#open" class="headerlink" title="open()"></a>open()</h3>“r”,以只读模式打开，你只能读取文件但不能编辑/删除文件的任何内容<br>“w”，以写入模式，可写，可删<br>“a”，以追加模式打开，写入到文件中的任何数据将自动添加到末尾<br>variable = open(‘fileName’)<br>打开文件后，要关闭文件<br>variable.close()<br>打开文件后，可以使用read()读取整个文件</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python exe</title>
    <url>/blog/learning/python-exe/</url>
    <content><![CDATA[<h1 id="write-the-script"><a href="#write-the-script" class="headerlink" title="write the script"></a>write the script</h1><p>#!/usr/bin/env python3</p>
<h2 id="after-save-change-the-mode"><a href="#after-save-change-the-mode" class="headerlink" title="after save,change the mode"></a>after save,change the mode</h2><p>chmod +x filename</p>
<h2 id="run-it"><a href="#run-it" class="headerlink" title="run it"></a>run it</h2><p>we can run it use ./filename.py<br>使用 4 个空格来缩进<br>永远不要混用空格和制表符<br>在函数之间空一行<br>在类之间空两行<br>字典，列表，元组以及参数列表中，在 , 后添加一个空格。对于字典，: 后面也添加一个空格<br>在赋值运算符和比较运算符周围要有空格（参数列表中除外），但是括号里则不加空格：a = f(1, 2) + g(3, 4)</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>github</title>
    <url>/blog/learning/github/</url>
    <content><![CDATA[<h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul>
<li>ssh 公私钥的使用</li>
<li>Github 的基本使用</li>
<li>Git 工具基本使用<h3 id="ssh-keygen"><a href="#ssh-keygen" class="headerlink" title="ssh-keygen"></a>ssh-keygen</h3>生成密钥<br>adress: .ssh<br>在这个文里面有id-rsa和id-rsa.pub,打id_rsa.pub,复制内容到github.<h3 id="安装git-工具"><a href="#安装git-工具" class="headerlink" title="安装git 工具"></a>安装git 工具</h3>sudo apt-get install git -y<br>配置用户名与邮箱<br>git config –global user.name “用户名“<br>git config –global user.email “邮箱“<br>git clone 地址<br>push [-u] origin &lt;分支名&gt;<br>u是绑定你这一次的仓库名<br>以后不用再从新输入<br>首先我们可以通过 git fetch 命令查看有哪一些新改动，用法是在仓库目录下敲入 git fetch origin<br>确认好更新的内容后，下一步就是把更新给同步到本地仓库中了，通过 git pull 命令来实现，具体用法是 git pull origin &lt;分支名&gt;，分支名默认是 master，再查看一下目录，可以看到已经同步好了 </li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python basic</title>
    <url>/blog/learning/python-basic/</url>
    <content><![CDATA[<h3 id="list-example"><a href="#list-example" class="headerlink" title="list example"></a>list example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 catNames =[]</span><br><span class="line">  2 while True:</span><br><span class="line">  3     print(&apos;Enter the name of the cat&apos;+str(len(catNames)+1))</span><br><span class="line">  4     name = input()</span><br><span class="line">  5     if name ==&apos;&apos;:</span><br><span class="line">  6         break</span><br><span class="line">  7     catNames = catNames + [name]</span><br><span class="line">  8 print(&apos;The cat names are:&apos;)</span><br><span class="line">  9 for i in catNames:</span><br><span class="line"> 10     print(&apos;&apos;+i)</span><br><span class="line"> 11     # catNames=[&apos;yang&apos;,&apos;zc&apos;]</span><br></pre></td></tr></table></figure>
<h3 id="function-example"><a href="#function-example" class="headerlink" title="function example"></a>function example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 ## write your own functions</span><br><span class="line">  2 def hello():</span><br><span class="line">  3     print(&apos;howdy!&apos;)</span><br><span class="line">  4 hello()</span><br><span class="line">  5 ## write your 2 functions</span><br><span class="line">  6 def sage(age):</span><br><span class="line">  7     print(&quot;you are &quot; + age)</span><br><span class="line">  8 sage(&quot;12&quot;)</span><br><span class="line">  9 sage(&quot;10&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="global-statemen"><a href="#global-statemen" class="headerlink" title="global statemen"></a>global statemen</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 ## global statement                                         </span><br><span class="line">  2 def spam():</span><br><span class="line">  3     global eggs     # global statement,this variable will be     global</span><br><span class="line">  4     eggs = &apos;spam&apos;</span><br><span class="line">  5 eggs = &apos;global&apos;</span><br><span class="line">  6 spam()</span><br><span class="line">  7 print(eggs)</span><br></pre></td></tr></table></figure>
<h3 id="random-function"><a href="#random-function" class="headerlink" title="random function"></a>random function</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 # this is a guess the number game.</span><br><span class="line">  2 import random</span><br><span class="line">  3 secretNumber = random.randint(1,20)</span><br><span class="line">  4 print(&apos;I am thinking of a number between 1 and 20.&apos;)</span><br><span class="line">  5 # ask the player to guess 6 times</span><br><span class="line">  6 for guessestaken in range(1,7):</span><br><span class="line">  7     print(&apos;take a guess.&apos;)</span><br><span class="line">  8     guess = int(input())</span><br></pre></td></tr></table></figure>
<h3 id="The-Tuple-Data-Type"><a href="#The-Tuple-Data-Type" class="headerlink" title="The Tuple Data Type"></a>The Tuple Data Type</h3><p>eggs = (‘hello’,42,0.5)<br>tupels are typed with parenthese()<br>tuples cannot have their values modified</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>“为什么极点在左平面稳定？”</title>
    <url>/blog/learning/%E2%80%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9E%81%E7%82%B9%E5%9C%A8%E5%B7%A6%E5%B9%B3%E9%9D%A2%E7%A8%B3%E5%AE%9A%EF%BC%9F%E2%80%9D/</url>
    <content><![CDATA[<h3 id="Math-Knowledge"><a href="#Math-Knowledge" class="headerlink" title="Math Knowledge"></a>Math Knowledge</h3><p>exist $ k_1,k_2,k_3 \dots k_n $<br>$ k_1y_1+k_2y_2+k_3y_3+\dots+k_ny_n=0 $<br>this is linear dependent<br>if not<br>this is linear independent</p>
<h3 id="linear-indepent"><a href="#linear-indepent" class="headerlink" title="linear indepent"></a>linear indepent</h3><p>$ y_1, y_2 $ is linear independent<br>y1,y2 是两个线性无关的特解。</p>
<h3 id="微分方程的解"><a href="#微分方程的解" class="headerlink" title="微分方程的解"></a>微分方程的解</h3><p>$ r_1,r_2是两个不相等的实根$ 微分方程的通解为<br>$ Y = C_1e^{r_1t}+C_2e^{r_2t} $</p>
<h3 id="两个相等的实根"><a href="#两个相等的实根" class="headerlink" title="两个相等的实根"></a>两个相等的实根</h3><p>$ r_1,r_2 $<br>$ Y = (C_1+C_2x)e^{r_1x} $</p>
<h3 id="一对共轭复根"><a href="#一对共轭复根" class="headerlink" title="一对共轭复根"></a>一对共轭复根</h3><p>$ r_1=a \pm i\beta $<br>$ Y = e^{ax}(C_1cos(\beta)+C_1sin(\beta)) $</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在控制领域中，我们使用微分方程来建立数学模型<br>从微分方程的解我们可以看出输出与输入的关系，我们所说的极点就是r1,r2的根，只有极点小于0,我们的输出y在时间t大于无穷时趋向于0,这时我们们就可以说这个系统是稳定的。</p>
]]></content>
      <categories>
        <category>Control</category>
      </categories>
  </entry>
  <entry>
    <title>list and tuple</title>
    <url>/blog/learning/list-and-tuple/</url>
    <content><![CDATA[<h2 id="The-list-data-type"><a href="#The-list-data-type" class="headerlink" title="The list data type"></a>The list data type</h2><p>A list is a vale that contains multiple values in an ordered sequence.Items are separed with commas.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[1,2,3]</span><br><span class="line">[&apos;cat&apos;,&apos;bat&apos;]</span><br><span class="line">spam = [&apos;cat&apos;,&apos;bat&apos;]</span><br></pre></td></tr></table></figure>
<h3 id="Getting-individual-values-in-a-list-with-indexes"><a href="#Getting-individual-values-in-a-list-with-indexes" class="headerlink" title="Getting individual values in a list with indexes"></a>Getting individual values in a list with indexes</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]</span><br><span class="line">spam[0]</span><br><span class="line">spam[1]</span><br></pre></td></tr></table></figure>
<p>list can also contain other list values.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spam = [[&apos;cat&apos;,&apos;bat&apos;],[10,20,30,40,50]]</span><br><span class="line">spam[0]</span><br><span class="line">- [&apos;cat&apos;,&apos;bat&apos;]</span><br><span class="line">spa,[0][1]</span><br><span class="line">&apos;bat&apos;</span><br></pre></td></tr></table></figure>
<h3 id="Negative-Indexes"><a href="#Negative-Indexes" class="headerlink" title="Negative Indexes"></a>Negative Indexes</h3><p>While indexes start at 0 and go up,you can also use negative integers for the index.The integer value -1 refers to the last index in a list,the value -2 refers to the second-to-last index in a list,and so on.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]</span><br><span class="line">spam[-1]</span><br><span class="line">answer is : &apos;elephant&apos;</span><br></pre></td></tr></table></figure>
<h3 id="Getting-Sublists-with-Slices"><a href="#Getting-Sublists-with-Slices" class="headerlink" title="Getting Sublists with Slices"></a>Getting Sublists with Slices</h3><p>A slice is typed between square brackets,like an index,but it has two integers separated by a colon.Notice the difference between indexes and slices.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]</span><br><span class="line">spam[0:1]</span><br><span class="line">[&apos;cat&apos;,&apos;bat&apos;]</span><br></pre></td></tr></table></figure>
<h3 id="Getting-a-list’s-length-with-len"><a href="#Getting-a-list’s-length-with-len" class="headerlink" title="Getting a list’s length with len()"></a>Getting a list’s length with len()</h3><p>spam = [‘cat’,’bat’,’rat’,’elephant’]<br>len(spam)</p>
<blockquote>
<blockquote>
<blockquote>
<p>3<br>len can return the number of values that are in a list value passed to it.</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="List-Concatenation-and-list-Replication"><a href="#List-Concatenation-and-list-Replication" class="headerlink" title="List Concatenation and list Replication"></a>List Concatenation and list Replication</h3><p>[1,2,3]+[‘a’,’b’,’c’]<br>[1,2,3,’a’,’b’,’c’]</p>
<h3 id="Removing-Values-from-Lists-with-del-statement"><a href="#Removing-Values-from-Lists-with-del-statement" class="headerlink" title="Removing Values from Lists with del statement"></a>Removing Values from Lists with del statement</h3><p>spam = [‘cat’,’bat’,’rat’,’elephant’]<br>def spam[2] # ‘rat’ is deleted</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>Matrices and operations on Matrices</title>
    <url>/blog/learning/Matrices-and-operations-on-Matrices-1/</url>
    <content><![CDATA[<h4 id="what-is-matrix"><a href="#what-is-matrix" class="headerlink" title="what is matrix?"></a>what is matrix?</h4><p>Definition 1: A rectangular array of numbers of the field F</p>
<p>$ \begin{bmatrix} a_{11} &amp;  a_{12} \\ a_{21} &amp; a_{22} \end{bmatrix} $ is called a matrix.<br>when row=column,the matrix is called square and the number m equal to n,is called it’s order.<br>in the general case the matrix is called rectangular(of dimension  $m \times n $) </p>
<h5 id="elements"><a href="#elements" class="headerlink" title="elements"></a>elements</h5><p>the numbers that constitute the matrix are called its elements.</p>
<h5 id="subscript"><a href="#subscript" class="headerlink" title="subscript"></a>subscript</h5><p>the first subscript always denotes the row and second subscriptdenote the column</p>
<h4 id="multiplication-of-matrices"><a href="#multiplication-of-matrices" class="headerlink" title="multiplication of matrices"></a>multiplication of matrices</h4><p>generally the 2 matrices A and B,AB ~= BA<br>for example<br>$ \begin{bmatrix} 1 &amp; 2 \\ 3 &amp; 4 \end{bmatrix} \times \begin{bmatrix}2 &amp; 0 \\ 3 &amp; -1 \end{bmatrix} \neq \begin{bmatrix}2 &amp; 0 \\ 3 &amp; -1 \end{bmatrix} \times \begin{bmatrix} 1 &amp; 2 \\ 3 &amp; 4 \end{bmatrix} $<br>if AB = BA,we can say its permutable.<br>:</p>
]]></content>
      <categories>
        <category>linear algebra</category>
      </categories>
  </entry>
  <entry>
    <title>correlation 2D for CRV</title>
    <url>/blog/learning/correlatin-2D-for-CRV/</url>
    <content><![CDATA[<p>author:Zhongcheng Dai</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function [ fimCorr ] = myCorrelation(fim,fop);</span><br><span class="line">%MYCORRELATION calculation 2D correlation for CRV</span><br><span class="line">%   name:zhongcheng dai</span><br><span class="line">%   studentnumber:3043255</span><br><span class="line">%   fimCorr = myCorrelation(fim,fop) calculates the correlation of the</span><br><span class="line">%   image function fim and the operator function fop as introduced in the</span><br><span class="line">%   CRV lecture. Both fim and fop have to be matrices. fop has to be</span><br><span class="line">%   smaller than fim and of odd size. fimCorr is of the same size as fim.</span><br><span class="line">%   The outer pixels, where the correlation can not be calculated</span><br><span class="line">%   sufficiently, are set to zero;</span><br><span class="line"></span><br><span class="line">%% b</span><br><span class="line">  tfim = ndims(fim);</span><br><span class="line">   tfop = ndims(fop);</span><br><span class="line">   if tfim ~= 2 </span><br><span class="line">        error(&apos;fim is not a 2d&apos;);</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">  if tfop ~= 2</span><br><span class="line">       error(&apos;fop is not a 2d&apos;);</span><br><span class="line">   end</span><br><span class="line">rfim = ismatrix(fim);</span><br><span class="line">rfop = ismatrix(fop);</span><br><span class="line">if rfim ~= 1</span><br><span class="line">    error(&apos;fim is not a matrix&apos;);</span><br><span class="line">end</span><br><span class="line">if rfop ~= 1</span><br><span class="line">    error(&apos;fop is not a matrix&apos;);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% c</span><br><span class="line">   [sfop1 sfop2]= size(fop); </span><br><span class="line">   mfop1 = mod(sfop1,2);  </span><br><span class="line">   mfop2 = mod(sfop2,2);</span><br><span class="line">   if mfop1 == 0</span><br><span class="line">     error(&quot;fop don&apos;t allow even row &quot;);</span><br><span class="line">   end</span><br><span class="line">   if mfop2 == 0;</span><br><span class="line">     error(&quot;fop don&apos;t allw even column&quot;);</span><br><span class="line">   end</span><br><span class="line">%% d</span><br><span class="line">[orow ocl] = size(fop);</span><br><span class="line">[lfim bfim] = size(fim);</span><br><span class="line">if orow&gt;lfim | ocl &gt; bfim</span><br><span class="line">    error(&apos;fop is not smaller than the fim&apos;);</span><br><span class="line">end</span><br><span class="line">%% e</span><br><span class="line"></span><br><span class="line">    Fim = double(fim);</span><br><span class="line">    Fop = double(fop);</span><br><span class="line"></span><br><span class="line">%% f</span><br><span class="line">[orow ocl] = size(fop);</span><br><span class="line">[lfim bfim] = size(fim);</span><br><span class="line">h1 = (orow-1)/2 ;</span><br><span class="line">h2 = (ocl-1)/2 ;</span><br><span class="line"></span><br><span class="line">%% g</span><br><span class="line"></span><br><span class="line">fimCorrt=zeros(lfim,bfim);  </span><br><span class="line">for xi=h1+1:lfim-h1</span><br><span class="line">    for yi=h2+1:bfim-h2</span><br><span class="line">                sumf = 0;</span><br><span class="line">                for j=1:ocl</span><br><span class="line">                             for i=1:orow</span><br><span class="line">                              sumf = sumf+Fop(i,j)*Fim(xi+i-h1-1,yi+j-h2-1);</span><br><span class="line">                             end</span><br><span class="line">                end</span><br><span class="line">                    fimCorrt(xi,yi) = sumf;</span><br><span class="line">    end    </span><br><span class="line">end</span><br><span class="line">fimCorr=fimCorrt;</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<html><head>
      <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>fimcorr</title><meta name="generator" content="MATLAB 9.3"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2018-11-01"><meta name="DC.source" content="fimcorr.m"><style type="text/css">
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}

<p>html { min-height:100%; margin-bottom:1px; }<br>html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }<br>html body td { vertical-align:top; text-align:left; }</p>
<p>h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }<br>h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }<br>h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }</p>
<p>a { color:#005fce; text-decoration:none; }<br>a:hover { color:#005fce; text-decoration:underline; }<br>a:visited { color:#004aa0; text-decoration:none; }</p>
<p>p { padding:0px; margin:0px 0px 20px; }<br>img { padding:0px; margin:0px 0px 20px; border:none; }<br>p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } </p>
<p>ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }<br>ul li { padding:0px; margin:0px 0px 7px 0px; }<br>ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }<br>ul li ol li { list-style:decimal; }<br>ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }<br>ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }<br>ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }<br>ol li ol li { list-style-type:lower-alpha; }<br>ol li ul { padding-top:7px; }<br>ol li ul li { list-style:square; }</p>
<p>.content { font-size:1.2em; line-height:140%; padding: 20px; }</p>
<p>pre, code { font-size:12px; }<br>tt { font-size: 1.2em; }<br>pre { margin:0px 0px 20px; }<br>pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }<br>pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }<br>pre.error { color:red; }</p>
<p>@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }</p>
<p>span.keyword { color:#0000FF }<br>span.comment { color:#228B22 }<br>span.string { color:#A020F0 }<br>span.untermstring { color:#B20000 }<br>span.syscmd { color:#B28C00 }</p>
<p>.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }<br>.footer p { margin:0px; }<br>.footer a { color:#878787; }<br>.footer a:hover { color:#878787; text-decoration:underline; }<br>.footer a:visited { color:#878787; }</p>
<p>table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }<br>table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }</p>
<p>  </style><!-- hexo-inject:begin --><!-- hexo-inject:end --></head><body><div class="content"><pre class="codeinput">fimcorr2 = myCorrelation(magic(5),magic(3));<br>fimcorr3 = myCorrelation(magic(5),-1:1);<br>fimcorr4 = myCorrelation(magic(5),(-1:1)');<br></pre><pre class="codeoutput">fimCorr =<p></p>
<!-- hexo-inject:begin --><!-- hexo-inject:end --><pre><code>0     0     0     0     0
0   405   570   585     0
0   550   615   730     0
0   595   760   575     0
0     0     0     0     0</code></pre><p>fimCorr =</p>
<pre><code>0   -16   -16    14     0
0   -16     9     9     0
0     9    14     9     0
0     9     9   -16     0
0    14   -16   -16     0</code></pre><p>fimCorr =</p>
<pre><code>0     0     0     0     0</code></pre><p>   -13   -18    12    12     7<br>   -13     7    12     7   -13<br>     7    12    12   -18   -13<br>     0     0     0     0     0</p>
<p></p></pre><!-- hexo-inject:begin --><!-- hexo-inject:end --></div></body></html><p></p>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>what is machine learning</title>
    <url>/blog/learning/what-is-machine-learning/</url>
    <content><![CDATA[<h4 id="artificial-intelligence"><a href="#artificial-intelligence" class="headerlink" title="artificial intelligence"></a>artificial intelligence</h4><blockquote>
<blockquote>
<p>artificial =<br>Machine Learning<br>Data Mining</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>Machine Learning =<br>Pattern Recognition<br>Neural Network<br>Deep Learning</p>
</blockquote>
</blockquote>
<p>what is Machine Learning<br>Failure is the mother of success.</p>
<h4 id="Step-to-make-Machine-Learning"><a href="#Step-to-make-Machine-Learning" class="headerlink" title="Step to make Machine Learning"></a>Step to make Machine Learning</h4><p>1.First build the matimatical model.<br>2.sove weights based on these data.</p>
<p>Mashine Learning is based on data learning.</p>
<h4 id="costfunktion"><a href="#costfunktion" class="headerlink" title="costfunktion"></a>costfunktion</h4><p>let costfunktion $ \to 0 $</p>
<p>then we will find the answer.</p>
]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
  </entry>
  <entry>
    <title>Mac Log</title>
    <url>/blog/learning/Mac-Log/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip </span><br></pre></td></tr></table></figure>
<h4 id="Python-安装jupyter"><a href="#Python-安装jupyter" class="headerlink" title="Python 安装jupyter"></a>Python 安装jupyter</h4><p>python3 -m pip install jupyter      2018 10 30<br>卸载时用pip  uninstall jupyter</p>
<h4 id="conda-create-n-env-name-python-2-7-新建环境"><a href="#conda-create-n-env-name-python-2-7-新建环境" class="headerlink" title="conda create -n env_name  python=2.7 新建环境"></a>conda create -n env_name  python=2.7 新建环境</h4><p>mac<br>source activate env_name 进入环境<br>windows<br>activate env_name 微软进入环境</p>
<h4 id="pip-install-ipykernel"><a href="#pip-install-ipykernel" class="headerlink" title="pip install ipykernel"></a>pip install ipykernel</h4><p>python -m ipykernel install –name py27wanmen 安装ipykernel,取一个名子py27wanmen</p>
<h4 id="windows-user-在p27中要退出"><a href="#windows-user-在p27中要退出" class="headerlink" title="windows user 在p27中要退出"></a>windows user 在p27中要退出</h4><p>deactivate</p>
<h4 id="mac-user-在p27中要退出"><a href="#mac-user-在p27中要退出" class="headerlink" title="mac user 在p27中要退出"></a>mac user 在p27中要退出</h4><p>source deactivate</p>
<p>　查看已有的kernel</p>
<blockquote>
<blockquote>
<p>jupyter kernelspece list</p>
</blockquote>
</blockquote>
<h4 id="安装-决策树可视化工具graphviz"><a href="#安装-决策树可视化工具graphviz" class="headerlink" title="安装 决策树可视化工具graphviz"></a>安装 决策树可视化工具graphviz</h4><p>pip install graphviz</p>
]]></content>
      <categories>
        <category>Maclog</category>
      </categories>
  </entry>
  <entry>
    <title>knowledge point of the paper</title>
    <url>/blog/learning/knowlege-point-of-the-paper/</url>
    <content><![CDATA[<h4 id="协方差矩阵"><a href="#协方差矩阵" class="headerlink" title="协方差矩阵"></a>协方差矩阵</h4><p>$$ x = \begin{bmatrix} X_1 \\ X_2 \\ X_2 \\ \vdots \\  X_n  \end{bmatrix} $$<br>协方差的第（i,j）项是 $$ \sum_{ij}=cov(X_i,X_j) $$<br>协方差矩阵为<br>$$ \sum= E\begin{bmatrix} (X-E[X])(X-E[X])^T \end{bmatrix}  $$<br>1 协方差矩阵具有对称，半正定属性。<br>2 协方差属于半正定对称矩阵的黎曼流形。<br>3 黎曼几何数学工具<br>！基于黎曼距离来表示</p>
<h4 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h4><p>1 根据样本数据，表示为一个协方差矩阵流形序列<br>2 存在很多方差矩阵，根据很多方差矩阵求平均方差矩阵（参考协方差矩阵）</p>
<h4 id="黎曼距离计算"><a href="#黎曼距离计算" class="headerlink" title="黎曼距离计算"></a>黎曼距离计算</h4><p>1 超出上下界线？<br>是 则为有故障，否 则运行正常</p>
<h4 id="自适应的方式估计参考矩阵"><a href="#自适应的方式估计参考矩阵" class="headerlink" title="自适应的方式估计参考矩阵"></a>自适应的方式估计参考矩阵</h4><p>我们研究的是通过自适应的方式估计参考矩阵吗？</p>
<h4 id="黎曼几何"><a href="#黎曼几何" class="headerlink" title="黎曼几何"></a>黎曼几何</h4><p>黎曼度量的光滑流形，即流形切空间上二次形式的选择。它特别关注于角度，弧线长度及体积，把每个微小部分加起来而得到的整体的数量。<br>黎曼几何理论：<br>1.紧致二维黎曼流形上高斯曲率的积分等 $ i2\pi x $</p>
<h4 id="相空间重构"><a href="#相空间重构" class="headerlink" title="相空间重构"></a>相空间重构</h4><p>一维时间序列反向构造出原系统的相空间结构，相空间的关键是维数m 和延迟时间$ \tau $<br>问题：m和$ \tau $ 怎么确定？</p>
]]></content>
      <categories>
        <category>Masterarbeit</category>
      </categories>
  </entry>
  <entry>
    <title>python basics</title>
    <url>/blog/learning/python-basics/</url>
    <content><![CDATA[<h4 id="Entering-Expressions-into-the-interactive-shell"><a href="#Entering-Expressions-into-the-interactive-shell" class="headerlink" title="Entering Expressions into the interactive shell"></a>Entering Expressions into the interactive shell</h4><p>my operation system is OS X<br>how to enter the interactive Shell?<br>you can just simple type in terminal</p>
<blockquote>
<blockquote>
<p>python or python3<br>math operator </p>
</blockquote>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">** is Exponet  2**3=8</span><br><span class="line">%   Modulus/remainder 22%8=6</span><br><span class="line">// Integer division/floored quotient 22//8=6</span><br><span class="line">/  Division 22/8=2.75</span><br><span class="line">*  multiplication 3*5=15</span><br><span class="line">-  subtraction 5-2=3</span><br><span class="line">+  additon 2+2=4</span><br></pre></td></tr></table></figure>

<h4 id="The-integer-floationg-point-and-string-data-types"><a href="#The-integer-floationg-point-and-string-data-types" class="headerlink" title="The integer,floationg-point,and string data types"></a>The integer,floationg-point,and string data types</h4><h5 id="common-data-types"><a href="#common-data-types" class="headerlink" title="common data types"></a>common data types</h5><p>Intergers examples -2,-1,0,1,2,3,4,5<br>floating-point numbers -1.25,-1.0,-0.5,0.0,0.5,1.0,1.25<br>strings ‘a’,’11 cats’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;&gt;&gt; &apos;alice&apos;+&apos;zc&apos;</span><br><span class="line">&apos;alicezc&apos;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;Alice&apos; + 42</span><br><span class="line">type error:can&apos;t &apos;int&apos; object to str implicity</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;&apos;alice&apos;*5</span><br><span class="line">alicealicealicealicealice   </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;&apos;alice&apos;*&apos;bob&apos;</span><br><span class="line">error</span><br><span class="line">&gt;&gt;&gt;&apos;alice&apos;*5.0</span><br><span class="line">error</span><br></pre></td></tr></table></figure>


<h4 id="storing-Values-in-Variables"><a href="#storing-Values-in-Variables" class="headerlink" title="storing Values in Variables"></a>storing Values in Variables</h4><p>a variable is like a box in the computer’s memory where you can store a single value.if you want to use the result of an evaluated expression later in your program,you can save it inside a variable.i<br>if you enter the assignmen statemen zc = 42,then a variable named zc will have the integer value 42 stored in it.<br>vaiables name must following three rules:<br>it can be one word<br>it can use only letters,numbers,and the underscore character.<br>it cant begin with a number</p>
<h4 id="your-first-program"><a href="#your-first-program" class="headerlink" title="your first program"></a>your first program</h4><p>this program says hello and asks for my name.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&apos;hello world!&apos;)</span><br><span class="line">print(&apos;what is your name?&apos;) # ask for their name</span><br><span class="line">myname = input() # type your name</span><br><span class="line">print(&apos;it is good to meet you,&apos;+myname)</span><br><span class="line">print(&apos;it is good to meet you,&apos;+myname)</span><br><span class="line">print(len(myname))</span><br></pre></td></tr></table></figure>

<h4 id="function"><a href="#function" class="headerlink" title="function"></a>function</h4><p>str(),int(),and float()<br>will evaluate to the string,integer,and floationg-point forms</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>Zeitdiskrete Darstellung von LTI-Modellen</title>
    <url>/blog/learning/Zeitdiskrete-Darstellung-von-LTI-Modellen/</url>
    <content><![CDATA[<h4 id="Die-Matlab-Befehle"><a href="#Die-Matlab-Befehle" class="headerlink" title="Die Matlab-Befehle"></a>Die Matlab-Befehle</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systf syszpk sysss sysf rd</span><br><span class="line">= tf(num,den,Ts) = zpk(z,p,k,Ts)</span><br><span class="line">= ss(a,b,c,d,Ts)</span><br><span class="line">= frd (ant,f req,Ts)</span><br></pre></td></tr></table></figure>
<h4 id="Eine-zeitdiskrete-Uebertragungsfunktion"><a href="#Eine-zeitdiskrete-Uebertragungsfunktion" class="headerlink" title="Eine zeitdiskrete Uebertragungsfunktion"></a>Eine zeitdiskrete Uebertragungsfunktion</h4><p>z.B.<br>$ h_{TF}=\frac{z-0.5}{z^2+z-2}=h_{ZPK}=\frac{z-0.5}{(z+2)(z-1)} $</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Befehl:</span><br><span class="line">tf(num,den,Ts)</span><br><span class="line">Befehl:</span><br><span class="line">zpk(z,p,k,Ts)</span><br><span class="line"></span><br><span class="line">h=tf([1 -0.5],[1 1 -2],0.01) ;</span><br><span class="line">h=zpk(0.5,[-2,1],1,0.01);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="Rationale-Funktion-in-z"><a href="#Rationale-Funktion-in-z" class="headerlink" title="Rationale Funktion in z"></a>Rationale Funktion in z</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">z = tf(&apos;z&apos;,0.01);</span><br><span class="line">g= (z-0.05)/(z^2+z-2);</span><br><span class="line">or</span><br><span class="line">z=zpk(&apos;z&apos;,0.01);</span><br><span class="line">g= (z-0.05)/((z+2)*(z-1))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="Matlab-Zeigen"><a href="#Matlab-Zeigen" class="headerlink" title="Matlab Zeigen"></a>Matlab Zeigen</h4><pre><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</code></pre>   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>discretelern</title><meta name="generator" content="MATLAB 9.3"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2018-10-29"><meta name="DC.source" content="discretelern.m"><style type="text/css">
<p>html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}</p>
<p>html { min-height:100%; margin-bottom:1px; }<br>html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }<br>html body td { vertical-align:top; text-align:left; }</p>
<p>h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }<br>h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }<br>h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }</p>
<p>a { color:#005fce; text-decoration:none; }<br>a:hover { color:#005fce; text-decoration:underline; }<br>a:visited { color:#004aa0; text-decoration:none; }</p>
<p>p { padding:0px; margin:0px 0px 20px; }<br>img { padding:0px; margin:0px 0px 20px; border:none; }<br>p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } </p>
<p>ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }<br>ul li { padding:0px; margin:0px 0px 7px 0px; }<br>ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }<br>ul li ol li { list-style:decimal; }<br>ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }<br>ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }<br>ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }<br>ol li ol li { list-style-type:lower-alpha; }<br>ol li ul { padding-top:7px; }<br>ol li ul li { list-style:square; }</p>
<p>.content { font-size:1.2em; line-height:140%; padding: 20px; }</p>
<p>pre, code { font-size:12px; }<br>tt { font-size: 1.2em; }<br>pre { margin:0px 0px 20px; }<br>pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }<br>pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }<br>pre.error { color:red; }</p>
<p>@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }</p>
<p>span.keyword { color:#0000FF }<br>span.comment { color:#228B22 }<br>span.string { color:#A020F0 }<br>span.untermstring { color:#B20000 }<br>span.syscmd { color:#B28C00 }</p>
<p>.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }<br>.footer p { margin:0px; }<br>.footer a { color:#878787; }<br>.footer a:hover { color:#878787; text-decoration:underline; }<br>.footer a:visited { color:#878787; }</p>
<p>table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }<br>table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }</p>
<p>  </style><body><div class="content"><h2>Contents</h2><div><ul><li><a href="#1">normal</a></li><li><a href="#2">Rationale Funktion</a></li></ul></div><h2 id="1">normal</h2><pre class="codeinput">h=tf([1 -0.5],[1 1 -2],0.01)<br>h=zpk(0.5,[-2,1],1,0.01)<br></pre><pre class="codeoutput">h =<p></p>
<pre><code>z - 0.5</code></pre><p>  z^2 + z - 2</p>
<p>Sample time: 0.01 seconds<br>Discrete-time transfer function.</p>
<p>h =</p>
<pre><code>(z-0.5)</code></pre><p>  (z+2) (z-1)</p>
<p>Sample time: 0.01 seconds<br>Discrete-time zero/pole/gain model.</p>
<p></p></pre><h2 id="2">Rationale Funktion</h2><pre class="codeinput">z = tf(<span class="string">'z'</span>,0.01)<br>g= (z-0.05)/(z^2+z-2)<p></p>
<p>z=zpk(<span class="string">'z'</span>,0.01);<br>g= (z-0.05)/((z+2)*(z-1))</p>
<p>Sample time: 0.01 seconds<br>Discrete-time transfer function.</p>
<p>g =</p>
<p>   z - 0.05<br>  z^2 + z - 2</p>
<p>Sample time: 0.01 seconds<br>Discrete-time transfer function.</p>
<p>g =</p>
<p>   (z-0.05)<br>  (z+2) (z-1)</p>
<p>Sample time: 0.01 seconds<br>Discrete-time zero/pole/gain model.</p>
</pre></div></body>]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>state space</title>
    <url>/blog/learning/state-space/</url>
    <content><![CDATA[<h4 id="Multiple-Input-Multiple-Output"><a href="#Multiple-Input-Multiple-Output" class="headerlink" title="Multiple-Input/Multiple-Output"></a>Multiple-Input/Multiple-Output</h4><p>Zustands-DGL:<br>$ \dot{x} = Ax+Bu $<br>$ y = Cx+Du $</p>
<h4 id="Im-haeufig-auftretenden-Fall-eines-Single-Input-Single-Output-Systems"><a href="#Im-haeufig-auftretenden-Fall-eines-Single-Input-Single-Output-Systems" class="headerlink" title="Im haeufig auftretenden Fall eines Single-Input/Single-Output-Systems"></a>Im haeufig auftretenden Fall eines Single-Input/Single-Output-Systems</h4><p>$ \dot{x}=Ax+bu $<br>$ y = c^Tx+du   $</p>
<h4 id="Befehl-ss-A-B-C-D"><a href="#Befehl-ss-A-B-C-D" class="headerlink" title="Befehl ss(A,B,C,D)"></a>Befehl ss(A,B,C,D)</h4><html><head>
      <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>SS</title><meta name="generator" content="MATLAB 9.3"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2018-10-28"><meta name="DC.source" content="SS.m"><style type="text/css">
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}

<p>html { min-height:100%; margin-bottom:1px; }<br>html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }<br>html body td { vertical-align:top; text-align:left; }</p>
<p>h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }<br>h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }<br>h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }</p>
<p>a { color:#005fce; text-decoration:none; }<br>a:hover { color:#005fce; text-decoration:underline; }<br>a:visited { color:#004aa0; text-decoration:none; }</p>
<p>p { padding:0px; margin:0px 0px 20px; }<br>img { padding:0px; margin:0px 0px 20px; border:none; }<br>p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } </p>
<p>ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }<br>ul li { padding:0px; margin:0px 0px 7px 0px; }<br>ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }<br>ul li ol li { list-style:decimal; }<br>ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }<br>ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }<br>ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }<br>ol li ol li { list-style-type:lower-alpha; }<br>ol li ul { padding-top:7px; }<br>ol li ul li { list-style:square; }</p>
<p>.content { font-size:1.2em; line-height:140%; padding: 20px; }</p>
<p>pre, code { font-size:12px; }<br>tt { font-size: 1.2em; }<br>pre { margin:0px 0px 20px; }<br>pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }<br>pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }<br>pre.error { color:red; }</p>
<p>@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }</p>
<p>span.keyword { color:#0000FF }<br>span.comment { color:#228B22 }<br>span.string { color:#A020F0 }<br>span.untermstring { color:#B20000 }<br>span.syscmd { color:#B28C00 }</p>
<p>.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }<br>.footer p { margin:0px; }<br>.footer a { color:#878787; }<br>.footer a:hover { color:#878787; text-decoration:underline; }<br>.footer a:visited { color:#878787; }</p>
<p>table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }<br>table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }</p>
<p>  </style><!-- hexo-inject:begin --><!-- hexo-inject:end --></head><body><div class="content"><pre class="codeinput">ss([1 2;1 3],[1 2 3;1 3 2],[1 2;2 1;3 2],[0 0 0;0 0 0;0 0 0])<br></pre><pre class="codeoutput">ans =<p></p>
<!-- hexo-inject:begin --><!-- hexo-inject:end --><p>  A =<br>       x1  x2<br>   x1   1   2<br>   x2   1   3</p>
<p>  B =<br>       u1  u2  u3<br>   x1   1   2   3<br>   x2   1   3   2</p>
<p>  C =<br>       x1  x2<br>   y1   1   2<br>   y2   2   1<br>   y3   3   2</p>
<p>  D =<br>       u1  u2  u3<br>   y1   0   0   0<br>   y2   0   0   0<br>   y3   0   0   0</p>
<p>Continuous-time state-space model.</p>
<p></p></pre><p class="footer"><br><a href="http://www.mathworks.com/products/matlab/" target="_blank" rel="noopener"></a><br></p></div>&lt;!–<p></p>
<h5 id="SOURCE-BEGIN"><a href="#SOURCE-BEGIN" class="headerlink" title="SOURCE BEGIN"></a>SOURCE BEGIN</h5><p>ss([1 2;1 3],[1 2 3;1 3 2],[1 2;2 1;3 2],[0 0 0;0 0 0;0 0 0])</p>
<h5 id="SOURCE-END"><a href="#SOURCE-END" class="headerlink" title="SOURCE END"></a>SOURCE END</h5><p>–&gt;<!-- hexo-inject:begin --><!-- hexo-inject:end --></p></body></html><p></p>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>Frequency Response</title>
    <url>/blog/learning/Frequency-Response/</url>
    <content><![CDATA[<h4 id="Erstellen-von-FRD-SISO-Modellen"><a href="#Erstellen-von-FRD-SISO-Modellen" class="headerlink" title="Erstellen von FRD-SISO-Modellen"></a>Erstellen von FRD-SISO-Modellen</h4><p>$ F =\frac{1}{1+jwT}=\frac{1-jwT}{1+{wT}^2}=\frac{1}{\sqrt{1+{wT}^2}} $</p>
<h4 id="In-Matlab-eingeben"><a href="#In-Matlab-eingeben" class="headerlink" title="In Matlab eingeben"></a>In Matlab eingeben</h4><html><head>
      <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>Frequenz</title><meta name="generator" content="MATLAB 9.3"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2018-10-28"><meta name="DC.source" content="freqpractice.m"><style type="text/css">
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}

<p>html { min-height:100%; margin-bottom:1px; }<br>html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }<br>html body td { vertical-align:top; text-align:left; }</p>
<p>h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }<br>h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }<br>h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }</p>
<p>a { color:#005fce; text-decoration:none; }<br>a:hover { color:#005fce; text-decoration:underline; }<br>a:visited { color:#004aa0; text-decoration:none; }</p>
<p>p { padding:0px; margin:0px 0px 20px; }<br>img { padding:0px; margin:0px 0px 20px; border:none; }<br>p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } </p>
<p>ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }<br>ul li { padding:0px; margin:0px 0px 7px 0px; }<br>ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }<br>ul li ol li { list-style:decimal; }<br>ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }<br>ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }<br>ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }<br>ol li ol li { list-style-type:lower-alpha; }<br>ol li ul { padding-top:7px; }<br>ol li ul li { list-style:square; }</p>
<p>.content { font-size:1.2em; line-height:140%; padding: 20px; }</p>
<p>pre, code { font-size:12px; }<br>tt { font-size: 1.2em; }<br>pre { margin:0px 0px 20px; }<br>pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }<br>pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }<br>pre.error { color:red; }</p>
<p>@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }</p>
<p>span.keyword { color:#0000FF }<br>span.comment { color:#228B22 }<br>span.string { color:#A020F0 }<br>span.untermstring { color:#B20000 }<br>span.syscmd { color:#B28C00 }</p>
<p>.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }<br>.footer p { margin:0px; }<br>.footer a { color:#878787; }<br>.footer a:hover { color:#878787; text-decoration:underline; }<br>.footer a:visited { color:#878787; }</p>
<p>table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }<br>table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }</p>
<p>  </style><!-- hexo-inject:begin --><!-- hexo-inject:end --></head><body><div class="content"><h1>Frequenz</h1><pre class="codeinput">freq = [0.01 0.1 1 10 100 1000 10000] ; <span class="comment">%frequenzpunkte</span><br>ant = (1-j<em>freq)./(1-j</em>freq.^2) ; <span class="comment">%PT1erzeugen</span><p></p>
<!-- hexo-inject:begin --><!-- hexo-inject:end --><p>sysfrd = frd(ant,freq,<span class="string">'units'</span>,<span class="string">'rad/s'</span>)<br></p></pre><pre class="codeoutput">sysfrd =<p></p>
<pre><code>Frequency(rad/s)           Response       
----------------           --------       
       0.0100       1.000e+00 - 9.900e-03i
       0.1000       1.001e+00 - 8.999e-02i
       1.0000       1.000e+00 + 0.000e+00i
      10.0000       1.001e-01 + 8.999e-03i
     100.0000       1.000e-02 + 9.900e-05i
    1000.0000       1.000e-03 + 9.990e-07i
   10000.0000       1.000e-04 + 9.999e-09i</code></pre><p>Continuous-time frequency response.</p><!-- hexo-inject:begin --><!-- hexo-inject:end -->
</pre></div></body></html>

]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>Modelling of faults</title>
    <url>/blog/learning/Modelling-of-faults/</url>
    <content><![CDATA[<p>this is my note,the book I read is Model-based Fault Diagnosis Techniques-Design Schemes Algorithms and Tools.Author is Steven X.Ding.</p>
<h3 id="Modelling-of-faults"><a href="#Modelling-of-faults" class="headerlink" title="Modelling of faults"></a>Modelling of faults</h3><h4 id="three-faults"><a href="#three-faults" class="headerlink" title="three faults"></a>three faults</h4><p>there are manys to model faults,the widely used one is<br>$ y(p)=G_{yu}(p)u(p)+G_{yd}(d)d(p)+G_{yf}(p)f(p) $<br>where f is unknonw vector.G_{yf} is a known transfer matrix.<br>Suppose that a minimal state space realization is given by<br>$ \dot{x} = Ax+Bu+E_dd+E_ff $<br>$ y = Cx+Du+F_dd+F_ff $<br>where $ E_f,F_f $ is known.then we have<br>$ G_{yf}(p)=F_f+C(pI-A)^{-1}E_f $<br>$ E_f,F_f $ indicate the place where a fault occurs and its influence on the system components.<br>there are three form faults.<br>1.sensor  faults $ f_S $<br>2.actuator faults $ f_A $<br>3.process faults $ f_P $</p>
<h4 id="Sensor-fault"><a href="#Sensor-fault" class="headerlink" title="Sensor fault"></a>Sensor fault</h4><p> can be modelled by setting $ F_f = I $ i.e.<br>$ y = Cx + Du +F_dd+f_S $</p>
<h4 id="actuator-faults"><a href="#actuator-faults" class="headerlink" title="actuator faults"></a>actuator faults</h4><p>can be modelled by setting $ E_f=B,F_f=D $,i.e.<br>$ \dot{x}=Ax+B(u+f_A)+E_dd,y=Cx+D(u+f_A)+F_dd $</p>
<h4 id="process-faults"><a href="#process-faults" class="headerlink" title="process faults"></a>process faults</h4><p>can be modelled by $ E_f=E_p and F_f = F_p $ </p>
<h4 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h4><p>for the three fault,we define<br>$f = \begin{bmatrix} f_A \\ f_P \\ f_S \end{bmatrix} , E_f=\begin{bmatrix} B &amp; E_p &amp; 0\end{bmatrix} F_f = \begin{bmatrix} D &amp; F_p &amp; I \end{bmatrix} $</p>
<html>
<head><meta name="generator" content="Hexo 3.9.0">
<!-- hexo-inject:begin --><!-- hexo-inject:end --><script async custom-element="amp-auto-ads" src="https://cdn.ampproject.org/v0/amp-auto-ads-0.1.js">
</script><!-- hexo-inject:begin --><!-- hexo-inject:end -->
</head>
<body>
<!-- hexo-inject:begin --><!-- hexo-inject:end --><amp-auto-ads type="adsense" data-ad-client="ca-pub-5143313871951336">
</amp-auto-ads>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-5143313871951336",
          enable_page_level_ads: true
     });
</script><!-- hexo-inject:begin --><!-- hexo-inject:end -->
</body>
</html>
]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
  <entry>
    <title>zero and pole gain</title>
    <url>/blog/learning/zero-and-pole-gain/</url>
    <content><![CDATA[<h4 id="Nullstellen-Polstellen-Darstellung"><a href="#Nullstellen-Polstellen-Darstellung" class="headerlink" title="Nullstellen Polstellen Darstellung"></a>Nullstellen Polstellen Darstellung</h4><p>die Nullstellen Polstellen Darstellung kann beschreibt Das Uebertragungsverhalten.<br>$$ G(s) = k\frac{(s-z_1) \dots  (s-z_{m-1})(s-z_m)}{(s-p_1) \dots (s-p_{n-1})(s-p_n)} $$<br>hier ist k ein Verstaerkungsfaktor.z_1 bis z_m sind Nullstellen.p_1 bis p_n sind Polstellen.</p>
<h4 id="Befehl-zpk-z-p-k"><a href="#Befehl-zpk-z-p-k" class="headerlink" title="Befehl zpk(z,p,k)"></a>Befehl zpk(z,p,k)</h4><ul>
<li>z bedeutet zero</li>
<li>p bedeutet pole<br>In matlab wir koennen einfach eingeben.<br>ZB.</li>
<li><blockquote>
<blockquote>
<p>h = zpk([1 2 3],[1 5 6],2);</p>
</blockquote>
</blockquote>
<h4 id="Rationale-Funktion-in-s"><a href="#Rationale-Funktion-in-s" class="headerlink" title="Rationale Funktion in s"></a>Rationale Funktion in s</h4>zuesert wir sollen s definieren.<br>‘ &gt;&gt; s = zpk(‘s’);’<br>dann direct rationale Funktion is s ein geben.<br>‘ &gt;&gt; h = 2<em>1/(s-1)</em>(s+2);’</li>
</ul>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>zpk-mimo-Modellen</title>
    <url>/blog/learning/zpk-mimo-Modellen/</url>
    <content><![CDATA[<h4 id="MIMO-Modelle"><a href="#MIMO-Modelle" class="headerlink" title="MIMO Modelle"></a>MIMO Modelle</h4><p>$$ G(s) = \begin{pmatrix} h_{11} &amp; h_{12} \\ h_{21} &amp; h{22} \end{pmatrix} $$</p>
<h4 id="Eingabe-in-Matlab-erfolgt-auf-die-zwei-Arten"><a href="#Eingabe-in-Matlab-erfolgt-auf-die-zwei-Arten" class="headerlink" title="Eingabe in Matlab erfolgt auf die zwei Arten:"></a>Eingabe in Matlab erfolgt auf die zwei Arten:</h4><p>1.definieren der einzelnen zpk-siso-modelle mit zpk<br>h11 = zpk(z1,p1,k1) ;<br>h12 = zpk(z2,p2,k2) ;<br>h21 = zpk(z3,p3,k3) ;<br>h22 = zpk(z4,p4,k4) ;<br>G = [h11 h12;h21 h22];<br>2.rationale Funktionen is s:<br>s = zpk(‘s’);<br>h11 = 2<em>1/((s-1)</em>(s+2));<br>h12 = 2<em>(s-4)/((s-1)</em>(s+2));<br>h21 = 3<em>(s-5)/((s-7)</em>(s-5));<br>h22 = 4<em>(s-1)</em>(s-2)<em>(s-3)/((s-3)</em>s(4.5));<br>G = [h11 h12;h21 h22];<br>3.Definieren von zwei Cell Arrays<br>$$ Z = \begin{pmatrix} z_{11} &amp; z_{12} \\ z_{21} &amp; z_{22}  \end{pmatrix}      $$<br>$$ P = \begin{pmatrix} p_{11} &amp; p_{12} \\ p_{21} &amp; p_{22}  \end{pmatrix}      $$<br>$$ K = \begin{pmatrix} k_{11} &amp; k_{12} \\ k_{21} &amp; k_{22}  \end{pmatrix}      $$<br>Aufruf von zpk mit den Parametern Z,P und K.<br>$$ &gt;&gt; G= zpk(Z,P,K) ;</p>
<h4 id="Matlab-Zeigen"><a href="#Matlab-Zeigen" class="headerlink" title="Matlab Zeigen"></a>Matlab Zeigen</h4><p>click  <a href="https://sites.google.com/site/publishcode/home/zpk" target="_blank" rel="noopener">Matlab Zeigen</a> </p>
<html><head>
      <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>ZPK MIMO Modell</title><meta name="generator" content="MATLAB 9.3"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2018-10-28"><meta name="DC.source" content="zpklern.m"><style type="text/css">
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}

<p>html { min-height:100%; margin-bottom:1px; }<br>html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }<br>html body td { vertical-align:top; text-align:left; }</p>
<p>h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }<br>h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }<br>h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }</p>
<p>a { color:#005fce; text-decoration:none; }<br>a:hover { color:#005fce; text-decoration:underline; }<br>a:visited { color:#004aa0; text-decoration:none; }</p>
<p>p { padding:0px; margin:0px 0px 20px; }<br>img { padding:0px; margin:0px 0px 20px; border:none; }<br>p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } </p>
<p>ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }<br>ul li { padding:0px; margin:0px 0px 7px 0px; }<br>ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }<br>ul li ol li { list-style:decimal; }<br>ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }<br>ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }<br>ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }<br>ol li ol li { list-style-type:lower-alpha; }<br>ol li ul { padding-top:7px; }<br>ol li ul li { list-style:square; }</p>
<p>.content { font-size:1.2em; line-height:140%; padding: 20px; }</p>
<p>pre, code { font-size:12px; }<br>tt { font-size: 1.2em; }<br>pre { margin:0px 0px 20px; }<br>pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }<br>pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }<br>pre.error { color:red; }</p>
<p>@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }</p>
<p>span.keyword { color:#0000FF }<br>span.comment { color:#228B22 }<br>span.string { color:#A020F0 }<br>span.untermstring { color:#B20000 }<br>span.syscmd { color:#B28C00 }</p>
<p>.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }<br>.footer p { margin:0px; }<br>.footer a { color:#878787; }<br>.footer a:hover { color:#878787; text-decoration:underline; }<br>.footer a:visited { color:#878787; }</p>
<p>table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }<br>table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }</p>
<p>  </style><!-- hexo-inject:begin --><!-- hexo-inject:end --></head><body><div class="content"><h1>ZPK MIMO Modell</h1><pre class="codeinput"><span class="comment">%erstens Verfahren</span><br><span class="comment">%name:zhongcheng</span><br>h11 = zpk([1 2 5],[1 3 2],1) ;<br>h12 = zpk([2 3 6],[5 4],2) ;<br>h21 = zpk([2.1 3],[0 1],4) ;<br>h22 = zpk([4 7],[1 6],2) ;<br>H =[h11 h12 ; h21 h22]<br></pre><pre class="codeoutput">H =<p></p>
<!-- hexo-inject:begin --><!-- hexo-inject:end --><p>  From input 1 to output...<br>       (s-1) (s-2) (s-5)<br>   1:  -----------------<br>       (s-1) (s-2) (s-3)</p>
<pre><code>4 (s-2.1) (s-3)</code></pre><p>   2:  ---------------<br>           s (s-1)</p>
<p>  From input 2 to output...<br>       2 (s-2) (s-3) (s-6)<br>   1:  -------------------<br>           (s-5) (s-4)</p>
<pre><code>2 (s-4) (s-7)</code></pre><p>   2:  -------------<br>        (s-1) (s-6)</p>
<p>Continuous-time zero/pole/gain model.</p>
<p></p></pre><p class="footer"><br><a href="http://www.mathworks.com/products/matlab/" target="_blank" rel="noopener"></a><br></p></div><!-- hexo-inject:begin --><!-- hexo-inject:end --></body></html><p></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>至此，利用matlab，我们学会了用tf,zpk描述模型。下一部分我将要学到利用matlab去描述状态空间模型。</p>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>use arrays to describe MIMO system</title>
    <url>/blog/learning/use-arrays-to-describe-MIMO-system/</url>
    <content><![CDATA[<h4 id="cell-arrays"><a href="#cell-arrays" class="headerlink" title="cell arrays"></a>cell arrays</h4><p>zaehlerpolynome := NUM<br>nennerpolynome  := DEN<br>$$  NUM = \begin{pmatrix} n_{11} &amp;  n_{12} \\ n_{21} &amp;  n_{22} \end{pmatrix}  $$<br>$$  DEN = \begin{pmatrix} d_{11} &amp; d_{12} \\ d_{21} &amp; d{22} \end{pmatrix}  $$<br>In Matlab geben wir die Vektoren mit den Koeffizienten von s in absteigende Reihenfolge von s ein.</p>
<h4 id="IN-matlab"><a href="#IN-matlab" class="headerlink" title="IN matlab"></a>IN matlab</h4><blockquote>
<blockquote>
<p>NUM = {[2 -3] [1 1 -6];[1 2] 1}<br>DEN = {[1 1] [1 5];[1 5 4] [2 6 10]}<br>Und dann koennen wir noch ein mal tf Befehl benutzen.<br>G(s) = tf(NUM,DEN);</p>
</blockquote>
</blockquote>
<h4 id="System-nur-mit-Verstaerkung"><a href="#System-nur-mit-Verstaerkung" class="headerlink" title="System nur mit Verstaerkung"></a>System nur mit Verstaerkung</h4><p>das bedeutet output / input = constant<br>zB.<br>$$ G_1(s) = 3/1  $$<br>$$ G_2(s) = 0/2 $$<br>in matlab wir koennen eingeben</p>
<blockquote>
<blockquote>
<p>G = tf{[1 2;3 0]}; %1 2 sind input,3 0 sind ouptput.</p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>Modellierung linearer Zeitinvarianter Systeme</title>
    <url>/blog/learning/Modellierung-linearer-Zeitinvarianter-Systeme/</url>
    <content><![CDATA[<h4 id="LTI-Modelle"><a href="#LTI-Modelle" class="headerlink" title="LTI-Modelle"></a>LTI-Modelle</h4><ul>
<li>Zu Beginn wir machen die mathematische , systembeschreibung, die die Zusammenhaenge zwischen den Eingaengen u und den Ausgaengen y beschreibt.</li>
<li>Matlabtellt nun fuer zeitkontinuierlicheund -diskrete lineare zeitinvariante systeme(LTI-system) die folgenden vier Darstellungsarten zur Verfuegung:</li>
</ul>
<p>1.transfer function<br>2.zero-pole-gain ZPK<br>3.state-space<br>4.frequency response data</p>
<h4 id="Uebertragungsfunktion"><a href="#Uebertragungsfunktion" class="headerlink" title="Uebertragungsfunktion"></a>Uebertragungsfunktion</h4><p>Eine Uebertragungsfunktion ist mit dem Zaehlerpolynom und dem Nennerpolynom,und beschreibt das Uebertragungsverhalten eines Systems im Laplace-Breich.<br>$ h(s)=\frac{num(s)}{den(s)}=\frac{a_ms^m+a_{m-1}s^{m-1}+ \dots +a_1 s+a_0}{b_n s^n+b_{n-1} s^{n-1}+ \dots +b_1 s+b_0} $</p>
<h4 id="Erstellen-von-TF-SISO-Modellen"><a href="#Erstellen-von-TF-SISO-Modellen" class="headerlink" title="Erstellen von TF-SISO-Modellen"></a>Erstellen von TF-SISO-Modellen</h4><p>1.Befehl:tf(num,den)</p>
<h5 id="ZB-transfor-function"><a href="#ZB-transfor-function" class="headerlink" title="ZB.transfor function"></a>ZB.transfor function</h5><p>$ \frac{4s-2}{s-3} $<br>in matlab:G(s)=tf([4 -2],[1 -3])</p>
<h5 id="ZB-rationale-function-in-s"><a href="#ZB-rationale-function-in-s" class="headerlink" title="ZB.rationale function in s"></a>ZB.rationale function in s</h5><p>Es wird zuerst die Variable s als TF-modell definiert</p>
<blockquote>
<blockquote>
<p>s = tf(‘s’)<br>G(s) =(4*s-2)/(s-3)</p>
</blockquote>
</blockquote>
<h5 id="ZB-MIMO-TF"><a href="#ZB-MIMO-TF" class="headerlink" title="ZB.MIMO TF"></a>ZB.MIMO TF</h5><p>$ G(s)=\begin{bmatrix} g_{11} &amp; g_{12} \\ g_{21} &amp; g_{22} \ \end{bmatrix} $</p>
<p>$ g_{11}=\frac{2s-3}{s+1} $<br>$ g_{12}=\frac{s^2+s-6}{s+5} $<br>$ g_{21}=\frac{s+2}{s+4} $<br>$ g_{22}=\frac{-1}{2s^2+6s+10} $</p>
<ul>
<li>in matlab<br>g11 = tf([2 -3],[1 1]);<br>g12 = tf([1 1 -6],[1 5]);<br>g21 = tf([1 2],[1 4]);<br>g22 = tf([-1],[2 6 10]);<br>Zusammenfuegen zur Matrix G:<br>G = [g11 g12;g21 g22];</li>
</ul>
]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title>SPE NOTE 1 By Shawn</title>
    <url>/blog/SPE/SPE-NOTE-1-By-Shawn/</url>
    <content><![CDATA[<p>This is written by Shawn. My classmate Cui.</p>
<iframe id="iFrame1" name="iFrame1" width="100%" height="750" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21365&authkey=AGEKLQVQ2tLjc28&em=2"></iframe>

]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title>TSS Summary</title>
    <url>/blog/learning/TSS-Summary/</url>
    <content><![CDATA[<h5 id="Erwartungswert-E-x-n"><a href="#Erwartungswert-E-x-n" class="headerlink" title="Erwartungswert E{x(n)}"></a>Erwartungswert E{x(n)}</h5><p>$$ E\lbrace x(n)\rbrace=\int_{\infty}^{\infty}x\cdot f_x(x)dx $$</p>
<h5 id="quadratischer-Mittelwert"><a href="#quadratischer-Mittelwert" class="headerlink" title="quadratischer Mittelwert"></a>quadratischer Mittelwert</h5><p>$$ E\lbrace x^2(n)\rbrace=\int_{\infty}^{\infty}x^2\cdot f_x(x)dx $$</p>
<h4 id="varianz"><a href="#varianz" class="headerlink" title="varianz"></a>varianz</h4><p>$$  \sigma_{x}^{(2)}=m_{x}^{(2)}-{m_{x}^{(1)})^2 $$</p>
]]></content>
      <categories>
        <category>TSS</category>
      </categories>
  </entry>
  <entry>
    <title>Kalman Filter</title>
    <url>/blog/SPE/Kalman-Filter/</url>
    <content><![CDATA[<h4 id="Why-use-kalman-filters"><a href="#Why-use-kalman-filters" class="headerlink" title="Why use kalman filters?"></a>Why use kalman filters?</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/mwn8xhgNpFY?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="State-Observers"><a href="#State-Observers" class="headerlink" title="State  Observers"></a>State  Observers</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/4OerJmPpkRg?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="Optimal-state-Estimator"><a href="#Optimal-state-Estimator" class="headerlink" title="Optimal state Estimator"></a>Optimal state Estimator</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/ul3u2yLPwU0?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="Optimal-State-Estimator-Algorithm"><a href="#Optimal-State-Estimator-Algorithm" class="headerlink" title="Optimal State Estimator Algorithm"></a>Optimal State Estimator Algorithm</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/VFXf1lIZ3p8?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="Nonlinear-State-Estimators"><a href="#Nonlinear-State-Estimators" class="headerlink" title="Nonlinear State Estimators"></a>Nonlinear State Estimators</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/Vefia3JMeHE?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="How-to-usr-a-Kalman-Filter-in-Simulink"><a href="#How-to-usr-a-Kalman-Filter-in-Simulink" class="headerlink" title="How to usr a Kalman Filter in Simulink"></a>How to usr a Kalman Filter in Simulink</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/ouRM4sgoVs8?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<h4 id="Use-an-Extended-Kalan-filter-in-simuling"><a href="#Use-an-Extended-Kalan-filter-in-simuling" class="headerlink" title="Use an Extended Kalan filter in simuling"></a>Use an Extended Kalan filter in simuling</h4><iframe width="854" height="480" src="https://www.youtube.com/embed/bCsOdnADuAM?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title>steuerung und regelung</title>
    <url>/blog/learning/steuerung-und-regelung/</url>
    <content><![CDATA[<p>Der “kleine” Unterschied:Steuerung und Regelung<br>ohne Regler spricht man von einer Steuerung.Toleranzen und Stoergroessen werden nicht ausgelichen.</p>
]]></content>
      <categories>
        <category>Regelung</category>
      </categories>
  </entry>
  <entry>
    <title>list and tuple</title>
    <url>/blog/python/list-and-tuple/</url>
    <content><![CDATA[<h4 id="list-数据类型"><a href="#list-数据类型" class="headerlink" title="list 数据类型"></a>list 数据类型</h4><p>python的一种数据类型是列表：list它是一个有序的集合，可以随时添加和删除其中的元素。<br>比如：列出自己的课程，就可以用list表示：</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen = [‘math’,’SPE’,’FDI’]</p>
</blockquote>
<p>变量<code>vorlesungen</code>就是一个list,用<code>len()</code>函数可以获得list函数的个数：</p>
<blockquote>
<p>&gt;&gt;&gt; len(vorlesungen)<br>&gt;&gt;&gt; 3</p>
</blockquote>
<p>用索引可以访问list中的每一个位置的元素，记得索引是从<code>0</code>开始的：</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen[0]<br>&gt;&gt;&gt; ‘math’</p>
</blockquote>
<p><code>list</code>添加无素<br>*.append()命令可以添加元素，在列数最末尾追加。</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen.append(‘mehrg’)</p>
</blockquote>
<p>.insert(i,’*****’)可以在任意位置添加元素。</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen.insert(2,’pr’)</p>
</blockquote>
<p>要删除list末尾的元素，用<code>pop()</code>命令</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen.pop()</p>
</blockquote>
<p>要删除指定的位置元素，用<code>pop()</code>的方法，其中<code>i</code>是索引位置。</p>
<blockquote>
<p>&gt;&gt;&gt; vorlesungen.pop(i)</p>
</blockquote>
<p>可以用<code>len()</code>命令计算元数个数。</p>
<blockquote>
<p>&gt;&gt;&gt; len(vorlesungen)</p>
</blockquote>
<h4 id="tuple-数据类型"><a href="#tuple-数据类型" class="headerlink" title="tuple 数据类型"></a>tuple 数据类型</h4><blockquote>
<p>&gt;&gt;&gt; vorl=(‘a’,’b’,’c’)</p>
</blockquote>
<p>注意：如果定义一个1个元素的tuple，需要加入逗号</p>
<blockquote>
<p>&gt;&gt;&gt; t=(1,)</p>
</blockquote>
<p>tuple的元素不能更改。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>第一个python程序</title>
    <url>/blog/python/%E7%AC%AC%E4%B8%80%E4%B8%AApython%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h4 id="python交互模式"><a href="#python交互模式" class="headerlink" title="python交互模式"></a>python交互模式</h4><p>在命令行模式下敲<code>python3</code>（我使用的是python3),进入到python交互模式，提示符为<code>&gt;&gt;&gt;</code><br>在python交互模式下输入<code>exit()</code>回车，退回到命令行模式。</p>
<h4 id="打印出指定的文字"><a href="#打印出指定的文字" class="headerlink" title="打印出指定的文字"></a>打印出指定的文字</h4><p>让python打印出打定的文字，可以使用<code>print()</code>函数，然后把希望打印的文字用单引号或双引号括起来。</p>
<blockquote>
<p>&gt;&gt;&gt;print(‘hello,zhongcheng’)<br>hello,zhongcheng<br>这种用单引号或者双引号括起来的文本在程序中叫字符串。最后用<code>exit()</code>，这就是第一个python。</p>
</blockquote>
<h4 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h4><p>用文本编辑<code>.py</code>文件，可以用<code>python3 *.py</code>执行此文件。<br>这是我的第一个python程序。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>SPE_note1</title>
    <url>/blog/SPE/SPE-note1/</url>
    <content><![CDATA[<iframe id="iFrame1" name="iFrame1" width="100%" height="750" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21364&authkey=ALchs3SUg8cfYXA&em=2"></iframe>

]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title>backslash python3</title>
    <url>/blog/learning/backslash-python3/</url>
    <content><![CDATA[<h4 id="practice"><a href="#practice" class="headerlink" title="practice"></a>practice</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tabby_cat = &quot;\tI&apos;m tabbed in.&quot;</span><br><span class="line">persian_cat = &quot;I&apos;m split\non a line.&quot;</span><br><span class="line">backslash_cat = &quot;I&apos;m \\a \\ cat.&quot;</span><br><span class="line">print(tabby_cat)</span><br><span class="line">print(persian_cat)</span><br><span class="line">print(backslash_cat)</span><br></pre></td></tr></table></figure>

<p>Escape  what it does</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\\      Backslash \</span><br><span class="line">\&apos;      single-quote &apos;</span><br><span class="line">\&quot;      double-quote &quot;</span><br><span class="line">\a 	Ascii bell</span><br><span class="line">\b 	Ascii backspace</span><br><span class="line">\f 	Ascii formfeed</span><br><span class="line">\n	Ascii linefeed</span><br><span class="line">\N&#123;&#125; 	Character named name in the Unicode database</span><br><span class="line">\r	Ascii carriage return</span><br><span class="line">\t	Ascii horizontal tab</span><br><span class="line">\uxxxx  Character with 16-bit hex value xxxx</span><br><span class="line">\v 	Ascii vertical tab</span><br><span class="line">\ooo 	Character with octal value oo</span><br><span class="line">\xhh 	Character with hex value hh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>video for linear algebra</title>
    <url>/blog/linear_algebra/video-linear-algebra/</url>
    <content><![CDATA[<iframe width="854" height="480" src="https://www.youtube.com/embed/kjBOesZCoqc?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/fNk_zzaMoSs?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/k7RM-ot2NWY?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/kYB8IZa5AuE?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/XkY2DOUCWMU?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/rHLEWRxRGiM?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/Ip3X9LOh2dk?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/uQhTuRlWMxw?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/v8VSDg_WQlA?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/LyGKycYT2v0?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/eu6i7WJeinw?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/BaM7OCEm3G0?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/P2LTAUO1TdA?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/PFDu9oVAE-g?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<iframe width="854" height="480" src="https://www.youtube.com/embed/TgKwz5Ikpc8?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&amp;ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
]]></content>
      <categories>
        <category>linear algebra</category>
      </categories>
  </entry>
  <entry>
    <title>SPE_note2</title>
    <url>/blog/SPE/SPE-note2/</url>
    <content><![CDATA[<iframe id="iFrame1" name="iFrame1" width="100%" height="750" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  

]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title>request package</title>
    <url>/blog/learning/request-package/</url>
    <content><![CDATA[<h4 id="request-packagen-install"><a href="#request-packagen-install" class="headerlink" title="request packagen install"></a>request packagen install</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">import requests</span><br><span class="line">print(os.getcwd())</span><br><span class="line">r = requests.get(&quot;http://www.baidu.com&quot;)</span><br><span class="line">print(r,url)</span><br><span class="line">print(r,encoding) </span><br><span class="line">print(r,text)</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>SPE</title>
    <url>/blog/study/SPE/</url>
    <content><![CDATA[<p>$x^2+y^2=c^2$<br>$ \hat{a}  \int_{i=0}^{n} $</p>
<iframe src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2" id="myiframe" scrolling="no" onload="changeFrameHeight()" frameborder="0"></iframe>

<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="index.html"></iframe>  
<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  
<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  
<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  
<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  
<iframe id="iFrame1" name="iFrame1" width="100%" onload="this.height=iFrame1.document.body.scrollHeight" frameborder="0" src="https://onedrive.live.com/embed?cid=47AC61B16FE820EE&resid=47AC61B16FE820EE%21362&authkey=AM6z_jOhSAEehcg&em=2"></iframe>  



]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title>pflicht module und wahlpflicht module</title>
    <url>/blog/study/pflicht-module-und-wahlpflicht-module/</url>
    <content><![CDATA[<h3 id="pflicht-module"><a href="#pflicht-module" class="headerlink" title="pflicht module"></a><a href="http://note.youdao.com/noteshare?id=8b70dbc176ac861e77708cac71093f2b" target="_blank" rel="noopener">pflicht module</a></h3><p>1000 Pflichtmodule<br>1010 Mathematik E4<br>1020 Numerical Mathematics</p>
<h2 id="1030-Theorie-statistischer-Signale"><a href="#1030-Theorie-statistischer-Signale" class="headerlink" title="1030 Theorie statistischer Signale"></a>1030 Theorie statistischer Signale</h2><h2 id="1040-State-and-Parameter-Estimation"><a href="#1040-State-and-Parameter-Estimation" class="headerlink" title="1040 State and Parameter Estimation"></a>1040 State and Parameter Estimation</h2><p>1050 Nonlinear Control Systems</p>
<h2 id="1060-Moderne-Regelungstechnik"><a href="#1060-Moderne-Regelungstechnik" class="headerlink" title="1060 Moderne Regelungstechnik"></a>1060 Moderne Regelungstechnik</h2><h2 id="1070-Robust-Control"><a href="#1070-Robust-Control" class="headerlink" title="1070 Robust Control"></a>1070 Robust Control</h2><p>1080 Prozessautomatisierung</p>
<h2 id="1090-Kognitive-technische-Systeme"><a href="#1090-Kognitive-technische-Systeme" class="headerlink" title="1090 Kognitive technische Systeme"></a>1090 Kognitive technische Systeme</h2><p>1100 Fehlerdiagnose und Fehlertoleranz in technischen Systemen</p>
<h2 id="1110-Stromungslehre-2"><a href="#1110-Stromungslehre-2" class="headerlink" title="1110 Strömungslehre 2"></a>1110 Strömungslehre 2</h2><p>1120 Modelling and Simulation of Dynamic Systems<br>1130 Distributed Systems<br>1140 Real-Time Systems</p>
<h3 id="wapflicht-module"><a href="#wapflicht-module" class="headerlink" title="wapflicht module"></a><a href="http://note.youdao.com/noteshare?id=b6923ba1381c2074bcb60e87ae5f34e5" target="_blank" rel="noopener">wapflicht module</a></h3><p>40153 Thermodynamik und Kraftwerktechnik<br>40223 Fahrzeugtechnik<br>41128 Advanced System and Control Theory<br>41170 Test und Zuverlässigkeit digitaler Systeme<br>41253 Power System Operation and Control<br>41257 Operationsverstärker Praktikum<br>50009 Computer/Robot Vision<br>50011 Kognitive Robotersysteme<br>50055 Algorithmische Numerik</p>
]]></content>
      <categories>
        <category>lecture</category>
      </categories>
  </entry>
  <entry>
    <title>Modelling of technical systems</title>
    <url>/blog/learning/Modelling-of-technical-systems/</url>
    <content><![CDATA[<p>This is my note of fault diagnosis<br>reference book is: Model-based Fault Diagnosis Techniques-Design Schemes Algorithms and tools, Steven X.ding<br>chapter 3</p>
<h4 id="objective"><a href="#objective" class="headerlink" title="objective"></a>objective</h4><p>to model a class of dynamic systems,which consist of a process,actuators and sensors for the control and supervision purposes.<br>our major objective of addressing moddelling issues is to describe nominal and faulty system behavior.</p>
<h4 id="mathematical-models-for-linear-dynamic-systems"><a href="#mathematical-models-for-linear-dynamic-systems" class="headerlink" title="mathematical models for linear dynamic systems"></a>mathematical models for linear dynamic systems</h4><p>input-output description<br>state space representation</p>
<h4 id="coprime-factorization"><a href="#coprime-factorization" class="headerlink" title="coprime factorization"></a>coprime factorization</h4><p>coprime factorization is one key tools for our our study. //现在还不懂这个点，记得查找资料</p>
<h4 id="linear-time-invariant-system"><a href="#linear-time-invariant-system" class="headerlink" title="linear time invariant system"></a>linear time invariant system</h4><p>there are two standard mathematical representations for LTI systems.<br>1.the transfer matrix<br>1.state space </p>
]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
  <entry>
    <title>Basic concepts of fault diagnosis technique</title>
    <url>/blog/learning/Basic-concepts-of-fault-diagnosis-technique/</url>
    <content><![CDATA[<h4 id="Three-essential-tasks"><a href="#Three-essential-tasks" class="headerlink" title="Three essential tasks:"></a>Three essential tasks:</h4><ul>
<li>fault detection</li>
<li>fault isolation</li>
<li>fault analysis or identification<h4 id="Basic-ideas-major-issues-and-tools-in-the-observer-based-FDI-framework"><a href="#Basic-ideas-major-issues-and-tools-in-the-observer-based-FDI-framework" class="headerlink" title="Basic ideas, major issues and tools in the observer-based FDI framework"></a>Basic ideas, major issues and tools in the observer-based FDI framework</h4></li>
<li>on the observer-based residual generator framework</li>
<li>unknown input decoupling and fault isolation issues</li>
<li>robustness issues in the observer-based FDI framework</li>
<li>on the parity space FDI framework</li>
<li>residual evaluation and threshold computation</li>
<li>FDI system synthesis and design</li>
</ul>
]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
</search>
