<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[robust control note 1]]></title>
    <url>%2Fblog%2Fundefined%2Frobust-control-note-1%2F</url>
    <content type="text"><![CDATA[The main 2 topic1.parameterisation of stabilising controllers2.observers and observers-based controllers\Objective:y := the measurementw := reference signalthe goal is to make the $e = y - w /rightarrow min$ The stepplant is given (G(s),(A,B,C,D))Where (A,B,C,D) is statespace representation. 1.select of type controllerPI controllerAdaptive controllerFurry controller (not in the courseState feedback controller 2.design of controller1.pole placement (we can define eigendynamics of the system.2.Minimum energy control3.LQ(linear quadratisch) Controller4.quadratic reglflaeche]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[what is the self_driving]]></title>
    <url>%2Fblog%2Fundefined%2Fwhat-is-the-self-driving%2F</url>
    <content type="text"><![CDATA[Human1.high traffic accident rate2.learn to drive from scratch3.parking trouble self driving car1.more reliable driving2.learnalbe driving system3.no parking trouble 6 level of the self driving system1.driver assistance(driver fully engaged2.partial automation(1,automatic cruise control(2,automatic lane keeping3.conditional automation(1,human take over(2,whenever necessary4.no human interference(1,without steering wheel,throttle or brake(2,restricted in geofence5.full automation1995 Mercedes s500 finished the eureka prometheus project.2009 google started self_driving project]]></content>
      <categories>
        <category>self driving</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[environment configeration]]></title>
    <url>%2Fblog%2Fundefined%2Fenvironment-configeration%2F</url>
    <content type="text"><![CDATA[pip,numpy,scikit-nerualnetwork installos:macospython2.76 have already installed the pip.scikit-nerualnetwork is deep learning toolsinstall: pip install -U scikit-learnscikit-learn include the SVM tools install matplotlibpip3 install -U matplotlib]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[The two types of problems]]></title>
    <url>%2Fblog%2Fundefined%2FThe-two-types-of-problems%2F</url>
    <content type="text"><![CDATA[1.Analysis problems:Given a controller,determine if the controlled signals satisfy the desired properties for all admissible noises,disturbances,and model uncertainties.2.Synthesis problems:Design a controller so that the controlled signals satisfy the desire properties for all admissble noises,disturbances,and model uncertainties.]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[K methode]]></title>
    <url>%2Fblog%2Fundefined%2FK-methode%2F</url>
    <content type="text"><![CDATA[概述k 近邻算法采用测量不同特征值之间的距离方法进行分类。优点：精度高，对异常值不敏感，无数据输入假定。缺点：计算复杂度高，空间复杂度高。适用数据范围：数值型和标称型。 原理存在一个样本数据集合，每个数据有自己的标签。当我们输入新的数据后，会计算新数据的每个特征与样本集中数据对应的特征进行比较，然后算法提取样本集中特征最相似数据的分类标签。一般来说我们只选择样本数据集中前k个最相似的数据。例：电影分类，分开爱情片和动作片。输入一个未知电影，计算未知电影与爱情片和动作片的距离。 流程1.收集数据，使用任何方法。2.准备数据，距离计算所需要的数值，最好是结构化的数据格式。4.训练算法，此步骤不适合k-近邻算法。5.测试算法，计算错误率。6.使用算法，首先需要输入样本数据和结构化的输出结果，然后运行k-近邻算法判定输入数据分别属于哪个分类，最后应用对计算出的分类执行后续的处理。 准备首先，创建名为knn.py的python模块。1234567from numpy import *def createDataSet(): group = array([[1.0,1.1],[1.0,1.0],[0,0]]) labels = [&apos;A&apos;,&apos;A&apos;,&apos;B&apos;,&apos;B&apos;] return group,labels然后我们调用我的新建的knn模块。12import knngroup,labels = knn.createDataSet() 实施knn算法1.计算已知类别属性的数据集中的每个点与当前点的距离2.按照距离递增次序排序3.先取与当前点距离最小的k个点4.确定前k个点所在类别出现频率5.返回前k个点出现频率最高的类别作为当前点的预测分类]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[coprime factorization]]></title>
    <url>%2Fblog%2Fundefined%2Fright-coprime-factorization%2F</url>
    <content type="text"><![CDATA[right coprime factorization,a state feedback interpretation$ y = Gu \rightarrow\begin{cases}\dot{x}=Ax+Bu \\y = Cx+Du\end{cases}\rightarrow{u:=Fx+v}\begin{cases}\dot{x}=(A+BF)x+Bv \\u=Fx+v \\y=Cx+D(v+Fx)=(C+DF)x+Dv\end{cases}$//我们把u定义的公式代入，得到F和v的式子。F,v的式子可以得到传递矩阵。M,N$ u = Mv, y = Nv $ The left co-prime factorizationan observer-based residual generation interpretation]]></content>
      <categories>
        <category>robust</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Creating Regex Objects]]></title>
    <url>%2Fblog%2Fundefined%2FCreating-Regex-Objects%2F</url>
    <content type="text"><![CDATA[Regex ObjectsAll the regex function in python are in the ‘re’ module.Enter the following into the interactive shell to import this module:1234567import rephoneNumRegex = re.compile(r&apos;(\(\d\d\d\))(\d\d\d-\d\d\d\d)&apos;)mo = phoneNumRegex.search(&apos;My phone number is (415) 555-4242.&apos;)mo.group(1)mo.group(2)&apos;555-4242&apos; Matching Multiple Groups with the Pipe123456batRegex = re.compile(r&apos;Bat(man|mobile|copter|bat)&apos;)mo = batRegex.search(&apos;Batmobile lost a wheel&apos;)mo.group()&apos;Batmobile&apos;mo.group(1)&apos;mobile&apos;]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[“文件处理”]]></title>
    <url>%2Fblog%2Fundefined%2F%E2%80%9C%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E2%80%9D%2F</url>
    <content type="text"><![CDATA[operate file open file read file with statementopen()“r”,以只读模式打开，你只能读取文件但不能编辑/删除文件的任何内容“w”，以写入模式，可写，可删“a”，以追加模式打开，写入到文件中的任何数据将自动添加到末尾variable = open(‘fileName’)打开文件后，要关闭文件variable.close()打开文件后，可以使用read()读取整个文件]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python exe]]></title>
    <url>%2Fblog%2Fundefined%2Fpython-exe%2F</url>
    <content type="text"><![CDATA[write the script#!/usr/bin/env python3 after save,change the modechmod +x filename run itwe can run it use ./filename.py使用 4 个空格来缩进永远不要混用空格和制表符在函数之间空一行在类之间空两行字典，列表，元组以及参数列表中，在 , 后添加一个空格。对于字典，: 后面也添加一个空格在赋值运算符和比较运算符周围要有空格（参数列表中除外），但是括号里则不加空格：a = f(1, 2) + g(3, 4)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[github]]></title>
    <url>%2Fblog%2Fundefined%2Fgithub%2F</url>
    <content type="text"><![CDATA[知识点 ssh 公私钥的使用 Github 的基本使用 Git 工具基本使用ssh-keygen生成密钥adress: .ssh在这个文里面有id-rsa和id-rsa.pub,打id_rsa.pub,复制内容到github.安装git 工具sudo apt-get install git -y配置用户名与邮箱git config –global user.name “用户名“git config –global user.email “邮箱“git clone 地址push [-u] origin &lt;分支名&gt;u是绑定你这一次的仓库名以后不用再从新输入首先我们可以通过 git fetch 命令查看有哪一些新改动，用法是在仓库目录下敲入 git fetch origin确认好更新的内容后，下一步就是把更新给同步到本地仓库中了，通过 git pull 命令来实现，具体用法是 git pull origin &lt;分支名&gt;，分支名默认是 master，再查看一下目录，可以看到已经同步好了]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python basic]]></title>
    <url>%2Fblog%2Fundefined%2Fpython-basic%2F</url>
    <content type="text"><![CDATA[list example12345678910111 catNames =[] 2 while True: 3 print(&apos;Enter the name of the cat&apos;+str(len(catNames)+1)) 4 name = input() 5 if name ==&apos;&apos;: 6 break 7 catNames = catNames + [name] 8 print(&apos;The cat names are:&apos;) 9 for i in catNames: 10 print(&apos;&apos;+i) 11 # catNames=[&apos;yang&apos;,&apos;zc&apos;] function example1234567891 ## write your own functions 2 def hello(): 3 print(&apos;howdy!&apos;) 4 hello() 5 ## write your 2 functions 6 def sage(age): 7 print(&quot;you are &quot; + age) 8 sage(&quot;12&quot;) 9 sage(&quot;10&quot;) global statemen12345671 ## global statement 2 def spam(): 3 global eggs # global statement,this variable will be global 4 eggs = &apos;spam&apos; 5 eggs = &apos;global&apos; 6 spam() 7 print(eggs) random function123456781 # this is a guess the number game. 2 import random 3 secretNumber = random.randint(1,20) 4 print(&apos;I am thinking of a number between 1 and 20.&apos;) 5 # ask the player to guess 6 times 6 for guessestaken in range(1,7): 7 print(&apos;take a guess.&apos;) 8 guess = int(input()) The Tuple Data Typeeggs = (‘hello’,42,0.5)tupels are typed with parenthese()tuples cannot have their values modified]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[“为什么极点在左平面稳定？”]]></title>
    <url>%2Fblog%2Fundefined%2F%E2%80%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9E%81%E7%82%B9%E5%9C%A8%E5%B7%A6%E5%B9%B3%E9%9D%A2%E7%A8%B3%E5%AE%9A%EF%BC%9F%E2%80%9D%2F</url>
    <content type="text"><![CDATA[Math Knowledgeexist $ k_1,k_2,k_3 \dots k_n $$ k_1y_1+k_2y_2+k_3y_3+\dots+k_ny_n=0 $this is linear dependentif notthis is linear independent linear indepent$ y_1, y_2 $ is linear independenty1,y2 是两个线性无关的特解。 微分方程的解$ r_1,r_2是两个不相等的实根$ 微分方程的通解为$ Y = C_1e^{r_1t}+C_2e^{r_2t} $ 两个相等的实根$ r_1,r_2 $$ Y = (C_1+C_2x)e^{r_1x} $ 一对共轭复根$ r_1=a \pm i\beta $$ Y = e^{ax}(C_1cos(\beta)+C_1sin(\beta)) $ 分析在控制领域中，我们使用微分方程来建立数学模型从微分方程的解我们可以看出输出与输入的关系，我们所说的极点就是r1,r2的根，只有极点小于0,我们的输出y在时间t大于无穷时趋向于0,这时我们们就可以说这个系统是稳定的。]]></content>
      <categories>
        <category>Control</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[list and tuple]]></title>
    <url>%2Fblog%2Fundefined%2Flist-and-tuple%2F</url>
    <content type="text"><![CDATA[The list data typeA list is a vale that contains multiple values in an ordered sequence.Items are separed with commas.123[1,2,3][&apos;cat&apos;,&apos;bat&apos;]spam = [&apos;cat&apos;,&apos;bat&apos;] Getting individual values in a list with indexes123spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]spam[0]spam[1] list can also contain other list values.12345spam = [[&apos;cat&apos;,&apos;bat&apos;],[10,20,30,40,50]]spam[0]- [&apos;cat&apos;,&apos;bat&apos;]spa,[0][1]&apos;bat&apos; Negative IndexesWhile indexes start at 0 and go up,you can also use negative integers for the index.The integer value -1 refers to the last index in a list,the value -2 refers to the second-to-last index in a list,and so on.1234spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]spam[-1]answer is : &apos;elephant&apos; Getting Sublists with SlicesA slice is typed between square brackets,like an index,but it has two integers separated by a colon.Notice the difference between indexes and slices.123spam = [&apos;cat&apos;,&apos;bat&apos;,&apos;rat&apos;,&apos;elephant&apos;]spam[0:1][&apos;cat&apos;,&apos;bat&apos;] Getting a list’s length with len()spam = [‘cat’,’bat’,’rat’,’elephant’]len(spam) 3len can return the number of values that are in a list value passed to it. List Concatenation and list Replication[1,2,3]+[‘a’,’b’,’c’][1,2,3,’a’,’b’,’c’] Removing Values from Lists with del statementspam = [‘cat’,’bat’,’rat’,’elephant’]def spam[2] # ‘rat’ is deleted]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Matrices and operations on Matrices]]></title>
    <url>%2Fblog%2Fundefined%2FMatrices-and-operations-on-Matrices-1%2F</url>
    <content type="text"><![CDATA[what is matrix?Definition 1: A rectangular array of numbers of the field F $ \begin{bmatrix} a_{11} &amp; a_{12} \\ a_{21} &amp; a_{22} \end{bmatrix} $ is called a matrix.when row=column,the matrix is called square and the number m equal to n,is called it’s order.in the general case the matrix is called rectangular(of dimension $m \times n $) elementsthe numbers that constitute the matrix are called its elements. subscriptthe first subscript always denotes the row and second subscriptdenote the column multiplication of matricesgenerally the 2 matrices A and B,AB ~= BAfor example$ \begin{bmatrix} 1 &amp; 2 \\ 3 &amp; 4 \end{bmatrix} \times \begin{bmatrix}2 &amp; 0 \\ 3 &amp; -1 \end{bmatrix} \neq \begin{bmatrix}2 &amp; 0 \\ 3 &amp; -1 \end{bmatrix} \times \begin{bmatrix} 1 &amp; 2 \\ 3 &amp; 4 \end{bmatrix} $if AB = BA,we can say its permutable.:]]></content>
      <categories>
        <category>linear algebra</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[correlation 2D for CRV]]></title>
    <url>%2Fblog%2Fundefined%2Fcorrelatin-2D-for-CRV%2F</url>
    <content type="text"><![CDATA[author:Zhongcheng Dai1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374function [ fimCorr ] = myCorrelation(fim,fop);%MYCORRELATION calculation 2D correlation for CRV% name:zhongcheng dai% studentnumber:3043255% fimCorr = myCorrelation(fim,fop) calculates the correlation of the% image function fim and the operator function fop as introduced in the% CRV lecture. Both fim and fop have to be matrices. fop has to be% smaller than fim and of odd size. fimCorr is of the same size as fim.% The outer pixels, where the correlation can not be calculated% sufficiently, are set to zero;%% b tfim = ndims(fim); tfop = ndims(fop); if tfim ~= 2 error(&apos;fim is not a 2d&apos;); end if tfop ~= 2 error(&apos;fop is not a 2d&apos;); endrfim = ismatrix(fim);rfop = ismatrix(fop);if rfim ~= 1 error(&apos;fim is not a matrix&apos;);endif rfop ~= 1 error(&apos;fop is not a matrix&apos;);end%% c [sfop1 sfop2]= size(fop); mfop1 = mod(sfop1,2); mfop2 = mod(sfop2,2); if mfop1 == 0 error(&quot;fop don&apos;t allow even row &quot;); end if mfop2 == 0; error(&quot;fop don&apos;t allw even column&quot;); end%% d[orow ocl] = size(fop);[lfim bfim] = size(fim);if orow&gt;lfim | ocl &gt; bfim error(&apos;fop is not smaller than the fim&apos;);end%% e Fim = double(fim); Fop = double(fop);%% f[orow ocl] = size(fop);[lfim bfim] = size(fim);h1 = (orow-1)/2 ;h2 = (ocl-1)/2 ;%% gfimCorrt=zeros(lfim,bfim); for xi=h1+1:lfim-h1 for yi=h2+1:bfim-h2 sumf = 0; for j=1:ocl for i=1:orow sumf = sumf+Fop(i,j)*Fim(xi+i-h1-1,yi+j-h2-1); end end fimCorrt(xi,yi) = sumf; end endfimCorr=fimCorrt;end fimcorrhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; }h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; }p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; }ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; }.content { font-size:1.2em; line-height:140%; padding: 20px; }pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; }@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 }.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; }table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } fimcorr2 = myCorrelation(magic(5),magic(3));fimcorr3 = myCorrelation(magic(5),-1:1);fimcorr4 = myCorrelation(magic(5),(-1:1)’);fimCorr = 0 0 0 0 0 0 405 570 585 0 0 550 615 730 0 0 595 760 575 0 0 0 0 0 0fimCorr = 0 -16 -16 14 0 0 -16 9 9 0 0 9 14 9 0 0 9 9 -16 0 0 14 -16 -16 0fimCorr = 0 0 0 0 0 -13 -18 12 12 7 -13 7 12 7 -13 7 12 12 -18 -13 0 0 0 0 0]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2Fundefined%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[what is machine learning]]></title>
    <url>%2Fblog%2Fundefined%2Fwhat-is-machine-learning%2F</url>
    <content type="text"><![CDATA[artificial intelligence artificial =Machine LearningData Mining Machine Learning =Pattern RecognitionNeural NetworkDeep Learning what is Machine LearningFailure is the mother of success. Step to make Machine Learning1.First build the matimatical model.2.sove weights based on these data. Mashine Learning is based on data learning. costfunktionlet costfunktion $ \to 0 $ then we will find the answer.]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mac Log]]></title>
    <url>%2Fblog%2Fundefined%2FMac-Log%2F</url>
    <content type="text"><![CDATA[1pip Python 安装jupyterpython3 -m pip install jupyter 2018 10 30卸载时用pip uninstall jupyter conda create -n env_name python=2.7 新建环境macsource activate env_name 进入环境windowsactivate env_name 微软进入环境 pip install ipykernelpython -m ipykernel install –name py27wanmen 安装ipykernel,取一个名子py27wanmen windows user 在p27中要退出deactivate mac user 在p27中要退出source deactivate 查看已有的kernel jupyter kernelspece list 安装 决策树可视化工具graphvizpip install graphviz]]></content>
      <categories>
        <category>Maclog</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[knowledge point of the papger topic]]></title>
    <url>%2Fblog%2Fundefined%2Fknowledge-point-of-the-papger-topic%2F</url>
    <content type="text"><![CDATA[协方差矩阵$$ x = \begin{bmatrix} X_1 \\ X_2 \\ X_2 \\ \vdots \\ X_n \end{bmatrix} $$协方差的第（i,j）项是 $$ \sum_{ij}=cov(X_i,X_j) $$协方差矩阵为$$ \sum= E\begin{bmatrix} (X-E[X])(X-E[X])^T \end{bmatrix} $$1 协方差矩阵具有对称，半正定属性。2 协方差属于半正定对称矩阵的黎曼流形。3 黎曼几何数学工具！基于黎曼距离来表示 数据处理1 根据样本数据，表示为一个协方差矩阵流形序列2 存在很多方差矩阵，根据很多方差矩阵求平均方差矩阵（参考协方差矩阵） 黎曼距离计算1 超出上下界线？是 则为有故障，否 则运行正常 自适应的方式估计参考矩阵我们研究的是通过自适应的方式估计参考矩阵吗？ 黎曼几何黎曼度量的光滑流形，即流形切空间上二次形式的选择。它特别关注于角度，弧线长度及体积，把每个微小部分加起来而得到的整体的数量。黎曼几何理论：1.紧致二维黎曼流形上高斯曲率的积分等 $ i2\pi x $ 相空间重构一维时间序列反向构造出原系统的相空间结构，相空间的关键是维数m 和延迟时间$ \tau $问题：m和$ \tau $ 怎么确定？]]></content>
      <categories>
        <category>Masterarbeit</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python basics]]></title>
    <url>%2Fblog%2Fundefined%2Fpython-basics%2F</url>
    <content type="text"><![CDATA[Entering Expressions into the interactive shellmy operation system is OS Xhow to enter the interactive Shell?you can just simple type in terminal python or python3math operator1234567** is Exponet 2**3=8% Modulus/remainder 22%8=6// Integer division/floored quotient 22//8=6/ Division 22/8=2.75* multiplication 3*5=15- subtraction 5-2=3+ additon 2+2=4 The integer,floationg-point,and string data typescommon data typesIntergers examples -2,-1,0,1,2,3,4,5floating-point numbers -1.25,-1.0,-0.5,0.0,0.5,1.0,1.25strings ‘a’,’11 cats’1234&gt;&gt;&gt; &apos;alice&apos;+&apos;zc&apos;&apos;alicezc&apos;123&gt;&gt;&gt; &apos;Alice&apos; + 42type error:can&apos;t &apos;int&apos; object to str implicity123&gt;&gt;&gt;&apos;alice&apos;*5alicealicealicealicealice 1234&gt;&gt;&gt;&apos;alice&apos;*&apos;bob&apos;error&gt;&gt;&gt;&apos;alice&apos;*5.0error storing Values in Variablesa variable is like a box in the computer’s memory where you can store a single value.if you want to use the result of an evaluated expression later in your program,you can save it inside a variable.iif you enter the assignmen statemen zc = 42,then a variable named zc will have the integer value 42 stored in it.vaiables name must following three rules:it can be one wordit can use only letters,numbers,and the underscore character.it cant begin with a number your first programthis program says hello and asks for my name.123456print(&apos;hello world!&apos;)print(&apos;what is your name?&apos;) # ask for their namemyname = input() # type your nameprint(&apos;it is good to meet you,&apos;+myname)print(&apos;it is good to meet you,&apos;+myname)print(len(myname)) functionstr(),int(),and float()will evaluate to the string,integer,and floationg-point forms]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Zeitdiskrete Darstellung von LTI-Modellen]]></title>
    <url>%2Fblog%2Fundefined%2FZeitdiskrete-Darstellung-von-LTI-Modellen%2F</url>
    <content type="text"><![CDATA[Die Matlab-Befehle1234systf syszpk sysss sysf rd= tf(num,den,Ts) = zpk(z,p,k,Ts)= ss(a,b,c,d,Ts)= frd (ant,f req,Ts) Eine zeitdiskrete Uebertragungsfunktionz.B.$ h_{TF}=\frac{z-0.5}{z^2+z-2}=h_{ZPK}=\frac{z-0.5}{(z+2)(z-1)} $12345678Befehl:tf(num,den,Ts)Befehl:zpk(z,p,k,Ts)h=tf([1 -0.5],[1 1 -2],0.01) ;h=zpk(0.5,[-2,1],1,0.01); Rationale Funktion in z123456z = tf(&apos;z&apos;,0.01);g= (z-0.05)/(z^2+z-2);orz=zpk(&apos;z&apos;,0.01);g= (z-0.05)/((z+2)*(z-1)) Matlab Zeigen&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; discretelernhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0} html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; } h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; } a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; } p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; } .content { font-size:1.2em; line-height:140%; padding: 20px; } pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; } @media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } } span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 } .footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; } table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ContentsnormalRationale Funktionnormalh=tf([1 -0.5],[1 1 -2],0.01)h=zpk(0.5,[-2,1],1,0.01)h = z - 0.5 z^2 + z - 2 Sample time: 0.01 secondsDiscrete-time transfer function. h = (z-0.5) (z+2) (z-1) Sample time: 0.01 secondsDiscrete-time zero/pole/gain model. Rationale Funktionz = tf(‘z’,0.01)g= (z-0.05)/(z^2+z-2) z=zpk(‘z’,0.01);g= (z-0.05)/((z+2)*(z-1)) Sample time: 0.01 secondsDiscrete-time transfer function. g = z - 0.05 z^2 + z - 2 Sample time: 0.01 secondsDiscrete-time transfer function. g = (z-0.05) (z+2) (z-1) Sample time: 0.01 secondsDiscrete-time zero/pole/gain model.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[state space]]></title>
    <url>%2Fblog%2Fundefined%2Fstate-space%2F</url>
    <content type="text"><![CDATA[Multiple-Input/Multiple-OutputZustands-DGL:$ \dot{x} = Ax+Bu $$ y = Cx+Du $ Im haeufig auftretenden Fall eines Single-Input/Single-Output-Systems$ \dot{x}=Ax+bu $$ y = c^Tx+du $ Befehl ss(A,B,C,D) SShtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; }h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; }p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; }ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; }.content { font-size:1.2em; line-height:140%; padding: 20px; }pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; }@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 }.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; }table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ss([1 2;1 3],[1 2 3;1 3 2],[1 2;2 1;3 2],[0 0 0;0 0 0;0 0 0])ans = A = x1 x2 x1 1 2 x2 1 3 B = u1 u2 u3 x1 1 2 3 x2 1 3 2 C = x1 x2 y1 1 2 y2 2 1 y3 3 2 D = u1 u2 u3 y1 0 0 0 y2 0 0 0 y3 0 0 0Continuous-time state-space model.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Frequency Response]]></title>
    <url>%2Fblog%2Fundefined%2FFrequency-Response%2F</url>
    <content type="text"><![CDATA[Erstellen von FRD-SISO-Modellen$ F =\frac{1}{1+jwT}=\frac{1-jwT}{1+{wT}^2}=\frac{1}{\sqrt{1+{wT}^2}} $ In Matlab eingeben Frequenzhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; }h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; }p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; }ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; }.content { font-size:1.2em; line-height:140%; padding: 20px; }pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; }@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 }.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; }table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } Frequenzfreq = [0.01 0.1 1 10 100 1000 10000] ; %frequenzpunkteant = (1-jfreq)./(1-jfreq.^2) ; %PT1erzeugensysfrd = frd(ant,freq,‘units’,‘rad/s’)sysfrd = Frequency(rad/s) Response —————- ——– 0.0100 1.000e+00 - 9.900e-03i 0.1000 1.001e+00 - 8.999e-02i 1.0000 1.000e+00 + 0.000e+00i 10.0000 1.001e-01 + 8.999e-03i 100.0000 1.000e-02 + 9.900e-05i 1000.0000 1.000e-03 + 9.990e-07i 10000.0000 1.000e-04 + 9.999e-09iContinuous-time frequency response.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Modelling of faults]]></title>
    <url>%2Fblog%2Fundefined%2FModelling-of-faults%2F</url>
    <content type="text"><![CDATA[this is my note,the book I read is Model-based Fault Diagnosis Techniques-Design Schemes Algorithms and Tools.Author is Steven X.Ding. Modelling of faultsthree faultsthere are manys to model faults,the widely used one is$ y(p)=G_{yu}(p)u(p)+G_{yd}(d)d(p)+G_{yf}(p)f(p) $where f is unknonw vector.G_{yf} is a known transfer matrix.Suppose that a minimal state space realization is given by$ \dot{x} = Ax+Bu+E_dd+E_ff $$ y = Cx+Du+F_dd+F_ff $where $ E_f,F_f $ is known.then we have$ G_{yf}(p)=F_f+C(pI-A)^{-1}E_f $$ E_f,F_f $ indicate the place where a fault occurs and its influence on the system components.there are three form faults.1.sensor faults $ f_S $2.actuator faults $ f_A $3.process faults $ f_P $ Sensor fault can be modelled by setting $ F_f = I $ i.e.$ y = Cx + Du +F_dd+f_S $ actuator faultscan be modelled by setting $ E_f=B,F_f=D $,i.e.$ \dot{x}=Ax+B(u+f_A)+E_dd,y=Cx+D(u+f_A)+F_dd $ process faultscan be modelled by $ E_f=E_p and F_f = F_p $ summaryfor the three fault,we define$f = \begin{bmatrix} f_A \\ f_P \\ f_S \end{bmatrix} , E_f=\begin{bmatrix} B &amp; E_p &amp; 0\end{bmatrix} F_f = \begin{bmatrix} D &amp; F_p &amp; I \end{bmatrix} $ (adsbygoogle = window.adsbygoogle || []).push({ google_ad_client: “ca-pub-5143313871951336”, enable_page_level_ads: true });]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[zero and pole gain]]></title>
    <url>%2Fblog%2Fundefined%2Fzero-and-pole-gain%2F</url>
    <content type="text"><![CDATA[Nullstellen Polstellen Darstellungdie Nullstellen Polstellen Darstellung kann beschreibt Das Uebertragungsverhalten.$$ G(s) = k\frac{(s-z_1) \dots (s-z_{m-1})(s-z_m)}{(s-p_1) \dots (s-p_{n-1})(s-p_n)} $$hier ist k ein Verstaerkungsfaktor.z_1 bis z_m sind Nullstellen.p_1 bis p_n sind Polstellen. Befehl zpk(z,p,k) z bedeutet zero p bedeutet poleIn matlab wir koennen einfach eingeben.ZB. h = zpk([1 2 3],[1 5 6],2); Rationale Funktion in szuesert wir sollen s definieren.‘ &gt;&gt; s = zpk(‘s’);’dann direct rationale Funktion is s ein geben.‘ &gt;&gt; h = 21/(s-1)(s+2);’]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[zpk-mimo-Modellen]]></title>
    <url>%2Fblog%2Fundefined%2Fzpk-mimo-Modellen%2F</url>
    <content type="text"><![CDATA[MIMO Modelle$$ G(s) = \begin{pmatrix} h_{11} &amp; h_{12} \\ h_{21} &amp; h{22} \end{pmatrix} $$ Eingabe in Matlab erfolgt auf die zwei Arten:1.definieren der einzelnen zpk-siso-modelle mit zpkh11 = zpk(z1,p1,k1) ;h12 = zpk(z2,p2,k2) ;h21 = zpk(z3,p3,k3) ;h22 = zpk(z4,p4,k4) ;G = [h11 h12;h21 h22];2.rationale Funktionen is s:s = zpk(‘s’);h11 = 21/((s-1)(s+2));h12 = 2(s-4)/((s-1)(s+2));h21 = 3(s-5)/((s-7)(s-5));h22 = 4(s-1)(s-2)(s-3)/((s-3)s(4.5));G = [h11 h12;h21 h22];3.Definieren von zwei Cell Arrays$$ Z = \begin{pmatrix} z_{11} &amp; z_{12} \\ z_{21} &amp; z_{22} \end{pmatrix} $$$$ P = \begin{pmatrix} p_{11} &amp; p_{12} \\ p_{21} &amp; p_{22} \end{pmatrix} $$$$ K = \begin{pmatrix} k_{11} &amp; k_{12} \\ k_{21} &amp; k_{22} \end{pmatrix} $$Aufruf von zpk mit den Parametern Z,P und K.$$ &gt;&gt; G= zpk(Z,P,K) ; Matlab Zeigenclick Matlab Zeigen ZPK MIMO Modellhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:’’;content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0} html { min-height:100%; margin-bottom:1px; }html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }html body td { vertical-align:top; text-align:left; } h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; } a { color:#005fce; text-decoration:none; }a:hover { color:#005fce; text-decoration:underline; }a:visited { color:#004aa0; text-decoration:none; } p { padding:0px; margin:0px 0px 20px; }img { padding:0px; margin:0px 0px 20px; border:none; }p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }ul li { padding:0px; margin:0px 0px 7px 0px; }ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }ul li ol li { list-style:decimal; }ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }ol li ol li { list-style-type:lower-alpha; }ol li ul { padding-top:7px; }ol li ul li { list-style:square; } .content { font-size:1.2em; line-height:140%; padding: 20px; } pre, code { font-size:12px; }tt { font-size: 1.2em; }pre { margin:0px 0px 20px; }pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }pre.error { color:red; } @media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } } span.keyword { color:#0000FF }span.comment { color:#228B22 }span.string { color:#A020F0 }span.untermstring { color:#B20000 }span.syscmd { color:#B28C00 } .footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }.footer p { margin:0px; }.footer a { color:#878787; }.footer a:hover { color:#878787; text-decoration:underline; }.footer a:visited { color:#878787; } table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; } ZPK MIMO Modell%erstens Verfahren%name:zhongchengh11 = zpk([1 2 5],[1 3 2],1) ;h12 = zpk([2 3 6],[5 4],2) ;h21 = zpk([2.1 3],[0 1],4) ;h22 = zpk([4 7],[1 6],2) ;H =[h11 h12 ; h21 h22]H = From input 1 to output… (s-1) (s-2) (s-5) 1: —————– (s-1) (s-2) (s-3) 4 (s-2.1) (s-3) 2: ————— s (s-1) From input 2 to output… 2 (s-2) (s-3) (s-6) 1: ——————- (s-5) (s-4) 2 (s-4) (s-7) 2: ————- (s-1) (s-6) Continuous-time zero/pole/gain model. 小结至此，利用matlab，我们学会了用tf,zpk描述模型。下一部分我将要学到利用matlab去描述状态空间模型。]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[use arrays to describe MIMO system]]></title>
    <url>%2Fblog%2Fundefined%2Fuse-arrays-to-describe-MIMO-system%2F</url>
    <content type="text"><![CDATA[cell arrayszaehlerpolynome := NUMnennerpolynome := DEN$$ NUM = \begin{pmatrix} n_{11} &amp; n_{12} \\ n_{21} &amp; n_{22} \end{pmatrix} $$$$ DEN = \begin{pmatrix} d_{11} &amp; d_{12} \\ d_{21} &amp; d{22} \end{pmatrix} $$In Matlab geben wir die Vektoren mit den Koeffizienten von s in absteigende Reihenfolge von s ein. IN matlab NUM = {[2 -3] [1 1 -6];[1 2] 1}DEN = {[1 1] [1 5];[1 5 4] [2 6 10]}Und dann koennen wir noch ein mal tf Befehl benutzen.G(s) = tf(NUM,DEN); System nur mit Verstaerkungdas bedeutet output / input = constantzB.$$ G_1(s) = 3/1 $$$$ G_2(s) = 0/2 $$in matlab wir koennen eingeben G = tf{[1 2;3 0]}; %1 2 sind input,3 0 sind ouptput.]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Modellierung linearer Zeitinvarianter Systeme]]></title>
    <url>%2Fblog%2Fundefined%2FModellierung-linearer-Zeitinvarianter-Systeme%2F</url>
    <content type="text"><![CDATA[LTI-Modelle Zu Beginn wir machen die mathematische , systembeschreibung, die die Zusammenhaenge zwischen den Eingaengen u und den Ausgaengen y beschreibt. Matlabtellt nun fuer zeitkontinuierlicheund -diskrete lineare zeitinvariante systeme(LTI-system) die folgenden vier Darstellungsarten zur Verfuegung:1.transfer function2.zero-pole-gain ZPK3.state-space4.frequency response data UebertragungsfunktionEine Uebertragungsfunktion ist mit dem Zaehlerpolynom und dem Nennerpolynom,und beschreibt das Uebertragungsverhalten eines Systems im Laplace-Breich.$ h(s)=\frac{num(s)}{den(s)}=\frac{a_ms^m+a_{m-1}s^{m-1}+ \dots +a_1 s+a_0}{b_n s^n+b_{n-1} s^{n-1}+ \dots +b_1 s+b_0} $ Erstellen von TF-SISO-Modellen1.Befehl:tf(num,den) ZB.transfor function$ \frac{4s-2}{s-3} $in matlab:G(s)=tf([4 -2],[1 -3]) ZB.rationale function in sEs wird zuerst die Variable s als TF-modell definiert s = tf(‘s’)G(s) =(4*s-2)/(s-3) ZB.MIMO TF$ G(s)=\begin{bmatrix} g_{11} &amp; g_{12} \\ g_{21} &amp; g_{22} \ \end{bmatrix} $ $ g_{11}=\frac{2s-3}{s+1} $$ g_{12}=\frac{s^2+s-6}{s+5} $$ g_{21}=\frac{s+2}{s+4} $$ g_{22}=\frac{-1}{2s^2+6s+10} $ in matlabg11 = tf([2 -3],[1 1]);g12 = tf([1 1 -6],[1 5]);g21 = tf([1 2],[1 4]);g22 = tf([-1],[2 6 10]);Zusammenfuegen zur Matrix G:G = [g11 g12;g21 g22];]]></content>
      <categories>
        <category>Matlab simulation</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE NOTE 1 By Shawn]]></title>
    <url>%2Fblog%2FSPE%2FSPE-NOTE-1-By-Shawn%2F</url>
    <content type="text"><![CDATA[This is written by Shawn. My classmate Cui.]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[TSS Summary]]></title>
    <url>%2Fblog%2Fundefined%2FTSS-Summary%2F</url>
    <content type="text"><![CDATA[Erwartungswert E{x(n)}$$ E\lbrace x(n)\rbrace=\int_{\infty}^{\infty}x\cdot f_x(x)dx $$ quadratischer Mittelwert$$ E\lbrace x^2(n)\rbrace=\int_{\infty}^{\infty}x^2\cdot f_x(x)dx $$ varianz$$ \sigma_{x}^{(2)}=m_{x}^{(2)}-{m_{x}^{(1)})^2 $$]]></content>
      <categories>
        <category>TSS</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kalman Filter]]></title>
    <url>%2Fblog%2FSPE%2FKalman-Filter%2F</url>
    <content type="text"><![CDATA[Why use kalman filters? State Observers Optimal state Estimator Optimal State Estimator Algorithm Nonlinear State Estimators How to usr a Kalman Filter in Simulink Use an Extended Kalan filter in simuling]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[steuerung und regelung]]></title>
    <url>%2Fblog%2Fundefined%2Fsteuerung-und-regelung%2F</url>
    <content type="text"><![CDATA[Der “kleine” Unterschied:Steuerung und Regelungohne Regler spricht man von einer Steuerung.Toleranzen und Stoergroessen werden nicht ausgelichen.]]></content>
      <categories>
        <category>Regelung</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[list and tuple]]></title>
    <url>%2Fblog%2Fpython%2Flist-and-tuple%2F</url>
    <content type="text"><![CDATA[list 数据类型python的一种数据类型是列表：list它是一个有序的集合，可以随时添加和删除其中的元素。比如：列出自己的课程，就可以用list表示： >>> vorlesungen = [‘math’,’SPE’,’FDI’] 变量vorlesungen就是一个list,用len()函数可以获得list函数的个数： >>> len(vorlesungen)>>> 3 用索引可以访问list中的每一个位置的元素，记得索引是从0开始的： >>> vorlesungen[0]>>> ‘math’ list添加无素*.append()命令可以添加元素，在列数最末尾追加。 >>> vorlesungen.append(‘mehrg’) .insert(i,’*‘)可以在任意位置添加元素。 >>> vorlesungen.insert(2,’pr’) 要删除list末尾的元素，用pop()命令 >>> vorlesungen.pop() 要删除指定的位置元素，用pop()的方法，其中i是索引位置。 >>> vorlesungen.pop(i) 可以用len()命令计算元数个数。 >>> len(vorlesungen) tuple 数据类型 >>> vorl=(‘a’,’b’,’c’) 注意：如果定义一个1个元素的tuple，需要加入逗号 >>> t=(1,) tuple的元素不能更改。]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一个python程序]]></title>
    <url>%2Fblog%2Fpython%2F%E7%AC%AC%E4%B8%80%E4%B8%AApython%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[python交互模式在命令行模式下敲python3（我使用的是python3),进入到python交互模式，提示符为&gt;&gt;&gt;在python交互模式下输入exit()回车，退回到命令行模式。 打印出指定的文字让python打印出打定的文字，可以使用print()函数，然后把希望打印的文字用单引号或双引号括起来。 >>>print(‘hello,zhongcheng’)hello,zhongcheng这种用单引号或者双引号括起来的文本在程序中叫字符串。最后用exit()，这就是第一个python。 文本编辑用文本编辑.py文件，可以用python3 *.py执行此文件。这是我的第一个python程序。]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE_note1]]></title>
    <url>%2Fblog%2FSPE%2FSPE-note1%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[backslash python3]]></title>
    <url>%2Fblog%2Fundefined%2Fbackslash-python3%2F</url>
    <content type="text"><![CDATA[practice123456tabby_cat = &quot;\tI&apos;m tabbed in.&quot;persian_cat = &quot;I&apos;m split\non a line.&quot;backslash_cat = &quot;I&apos;m \\a \\ cat.&quot;print(tabby_cat)print(persian_cat)print(backslash_cat) Escape what it does1234567891011121314\\ Backslash \\&apos; single-quote &apos;\&quot; double-quote &quot;\a Ascii bell\b Ascii backspace\f Ascii formfeed\n Ascii linefeed\N&#123;&#125; Character named name in the Unicode database\r Ascii carriage return\t Ascii horizontal tab\uxxxx Character with 16-bit hex value xxxx\v Ascii vertical tab\ooo Character with octal value oo\xhh Character with hex value hh]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[video for linear algebra]]></title>
    <url>%2Fblog%2Flinear_algebra%2Fvideo-linear-algebra%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>linear algebra</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE_note2]]></title>
    <url>%2Fblog%2FSPE%2FSPE-note2%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[request package]]></title>
    <url>%2Fblog%2Fundefined%2Frequest-package%2F</url>
    <content type="text"><![CDATA[request packagen install1234567pip install requestsimport requestsprint(os.getcwd())r = requests.get(&quot;http://www.baidu.com&quot;)print(r,url)print(r,encoding) print(r,text)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SPE]]></title>
    <url>%2Fblog%2Fstudy%2FSPE%2F</url>
    <content type="text"><![CDATA[$x^2+y^2=c^2$$ \hat{a} \int_{i=0}^{n} $]]></content>
      <categories>
        <category>SPE</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pflicht module und wahlpflicht module]]></title>
    <url>%2Fblog%2Fstudy%2Fpflicht-module-und-wahlpflicht-module%2F</url>
    <content type="text"><![CDATA[pflicht module1000 Pflichtmodule1010 Mathematik E41020 Numerical Mathematics 1030 Theorie statistischer Signale1040 State and Parameter Estimation1050 Nonlinear Control Systems 1060 Moderne Regelungstechnik1070 Robust Control1080 Prozessautomatisierung 1090 Kognitive technische Systeme1100 Fehlerdiagnose und Fehlertoleranz in technischen Systemen 1110 Strömungslehre 21120 Modelling and Simulation of Dynamic Systems1130 Distributed Systems1140 Real-Time Systems wapflicht module40153 Thermodynamik und Kraftwerktechnik40223 Fahrzeugtechnik41128 Advanced System and Control Theory41170 Test und Zuverlässigkeit digitaler Systeme41253 Power System Operation and Control41257 Operationsverstärker Praktikum50009 Computer/Robot Vision50011 Kognitive Robotersysteme50055 Algorithmische Numerik]]></content>
      <categories>
        <category>lecture</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dynamik und Stabilitaetsuntersuchung]]></title>
    <url>%2Fblog%2Fcontrol%2FMehrgroessenreglung%2F</url>
    <content type="text"><![CDATA[Gegenstand der Betrachtung:$ \dot{\underline{x}}=\underline{Ax}(t)+\underline{Bu}(t) \in{R}^N $loesung:$ \underline{x}(t)=\underline{e}^{A(t-{t_0})}\underline{x}(t_0)+\int_{t_0}^{t}\underline{e}^{A(t-\tau)}\underline{Bu}(\tau)d\tau $Definition und Eigenschaft der Matrizen-e Funktion]]></content>
      <categories>
        <category>Control</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Modelling of technical systems]]></title>
    <url>%2Fblog%2Fundefined%2FModelling-of-technical-systems%2F</url>
    <content type="text"><![CDATA[This is my note of fault diagnosisreference book is: Model-based Fault Diagnosis Techniques-Design Schemes Algorithms and tools, Steven X.dingchapter 3 objectiveto model a class of dynamic systems,which consist of a process,actuators and sensors for the control and supervision purposes.our major objective of addressing moddelling issues is to describe nominal and faulty system behavior. mathematical models for linear dynamic systemsinput-output descriptionstate space representation coprime factorizationcoprime factorization is one key tools for our our study. //现在还不懂这个点，记得查找资料 linear time invariant systemthere are two standard mathematical representations for LTI systems.1.the transfer matrix1.state space]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Basic concepts of fault diagnosis technique]]></title>
    <url>%2Fblog%2Fundefined%2FBasic-concepts-of-fault-diagnosis-technique%2F</url>
    <content type="text"><![CDATA[Three essential tasks: fault detection fault isolation fault analysis or identificationBasic ideas, major issues and tools in the observer-based FDI framework on the observer-based residual generator framework unknown input decoupling and fault isolation issues robustness issues in the observer-based FDI framework on the parity space FDI framework residual evaluation and threshold computation FDI system synthesis and design]]></content>
      <categories>
        <category>FDI</category>
      </categories>
  </entry>
</search>
